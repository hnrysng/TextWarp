{
.appVersion = "3151";
.formatVersion = 3;
DisplayStrings = (
y
);
customParameters = (
{
name = vendorID;
value = COMM;
},
{
name = panose;
value = (
2,
13,
3,
4,
3,
5,
2,
5,
2,
3
);
},
{
name = unicodeRanges;
value = (
0,
1,
2
);
},
{
name = codePageRanges;
value = (
"1252",
"1250",
"1254",
"1257",
"bit 29"
);
},
{
name = fsType;
value = (
2
);
},
{
name = glyphOrder;
value = (
.notdef,
Eth,
eth,
Lslash,
lslash,
Scaron,
scaron,
Yacute,
yacute,
Thorn,
thorn,
Zcaron,
zcaron,
onehalf,
onequarter,
onesuperior,
threequarters,
threesuperior,
twosuperior,
brokenbar,
minus,
multiply,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
ntilde,
oacute,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
dagger,
degree,
cent,
sterling,
section,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
notequal,
AE,
Oslash,
infinity,
plusminus,
lessequal,
greaterequal,
yen,
mu,
partialdiff,
summation,
product,
pi,
integral,
ordfeminine,
ordmasculine,
Omega,
ae,
oslash,
questiondown,
exclamdown,
logicalnot,
radical,
florin,
approxequal,
Delta,
guillemotleft,
guillemotright,
ellipsis,
uni00A0,
Agrave,
Atilde,
Otilde,
OE,
oe,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
divide,
lozenge,
ydieresis,
Ydieresis,
fraction,
Euro,
guilsinglleft,
guilsinglright,
fi,
fl,
daggerdbl,
periodcentered,
quotesinglbase,
quotedblbase,
perthousand,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
Ograve,
Uacute,
Ucircumflex,
Ugrave,
dotlessi,
circumflex,
tilde,
macron,
breve,
dotaccent,
ring,
cedilla,
hungarumlaut,
ogonek,
caron,
Amacron,
Abreve,
Aogonek,
AEacute,
Cacute,
Ccircumflex,
Ccaron,
Cdotaccent,
Dcaron,
Dcroat,
Ecaron,
Emacron,
Ebreve,
Edotaccent,
Eogonek,
Gcircumflex,
Gbreve,
Gdotaccent,
Gcommaaccent,
Hcircumflex,
Hbar,
Itilde,
Imacron,
Idotaccent,
Iogonek,
Ibreve,
Jcircumflex,
Kcommaaccent,
Lacute,
Lcaron,
Lcommaaccent,
Ldot,
Nacute,
Ncaron,
Ncommaaccent,
Omacron,
Obreve,
Ohungarumlaut,
Oslashacute,
Racute,
Rcaron,
Rcommaaccent,
Sacute,
Scircumflex,
Scedilla,
Scommaaccent,
Tcaron,
Tcommaaccent,
uni021A,
Tbar,
Utilde,
Umacron,
Ubreve,
Uring,
Uhungarumlaut,
Uogonek,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave,
Ycircumflex,
Ygrave,
Zacute,
Zdotaccent,
amacron,
abreve,
aogonek,
aeacute,
cacute,
ccircumflex,
ccaron,
cdotaccent,
dcaron,
dcroat,
ecaron,
emacron,
ebreve,
edotaccent,
eogonek,
gcircumflex,
gbreve,
gdotaccent,
gcommaaccent,
hcircumflex,
hbar,
itilde,
imacron,
iogonek,
idotaccent,
ibreve,
uni0237,
jcircumflex,
kcommaaccent,
lacute,
lcaron,
lcommaaccent,
ldot,
nacute,
ncaron,
ncommaaccent,
napostrophe,
omacron,
obreve,
ohungarumlaut,
oslashacute,
racute,
rcaron,
rcommaaccent,
sacute,
scircumflex,
scedilla,
scommaaccent,
tcaron,
tcommaaccent,
uni021B,
tbar,
utilde,
umacron,
ubreve,
uring,
uhungarumlaut,
uogonek,
wacute,
wcircumflex,
wdieresis,
wgrave,
ycircumflex,
ygrave,
zacute,
zdotaccent,
IJ,
ij,
grave.cap,
acute.cap,
circumflex.cap,
caron.cap,
caron.alt,
tilde.cap,
dieresis.cap,
macron.cap,
uni02C9,
breve.cap,
ring.cap,
hungarumlaut.cap,
dotaccent.cap,
space_uni0326,
space_uni0326.alt,
uni00AD,
uni2219,
currency,
uni2215,
onethird,
oneeighth,
threeeighths,
fiveeighths,
twothirds,
seveneighths,
uni2113,
estimated,
uniF8FF,
R.alt,
Racute.alt,
Rcaron.alt,
Rcommaaccent.alt,
a.alt,
aacute.alt,
abreve.alt,
acircumflex.alt,
adieresis.alt,
agrave.alt,
amacron.alt,
aogonek.alt,
aring.alt,
atilde.alt,
f_f,
f_f_i,
f_f_l,
Ccedilla.alt,
Scedilla.alt,
ccedilla.alt,
scedilla.alt,
hyphen.cap,
endash.cap,
emdash.cap,
questiondown.cap,
exclamdown.cap,
parenleft.cap,
parenright.cap,
bracketleft.cap,
bracketright.cap,
braceleft.cap,
braceright.cap,
guillemotleft.cap,
guillemotright.cap,
guilsinglleft.cap,
guilsinglright.cap,
uni24C5,
registered.alt,
uni2032,
uni2033,
dollar.cap,
Euro.cap,
sterling.cap,
yen.cap,
zero.cap,
one.cap,
two.cap,
three.cap,
four.cap,
five.cap,
six.cap,
seven.cap,
eight.cap,
nine.cap,
percent.cap,
perthousand.cap,
zero.numerator,
one.numerator,
two.numerator,
three.numerator,
four.numerator,
five.numerator,
six.numerator,
seven.numerator,
eight.numerator,
nine.numerator,
zero.denominator,
one.denominator,
two.denominator,
three.denominator,
four.denominator,
five.denominator,
six.denominator,
seven.denominator,
eight.denominator,
nine.denominator,
uni2009
);
}
);
date = "2011-01-04 19:56:20 +0000";
familyName = "Neue Haas Grotesk Display Pro";
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 818;
},
{
name = typoDescender;
value = -182;
},
{
name = typoLineGap;
value = 200;
},
{
name = winAscent;
value = 914;
},
{
name = winDescent;
value = 214;
},
{
name = hheaAscender;
value = 818;
},
{
name = hheaDescender;
value = -182;
},
{
name = strikeoutPosition;
value = 310;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "Alignment Zones";
value = (
{
pos = 685;
size = 15;
},
{
pos = "-158";
size = "-23";
}
);
}
);
id = m01;
metricValues = (
{
pos = 818;
},
{
over = 15;
pos = 715;
},
{
over = 12;
pos = 517;
},
{
over = -14;
},
{
pos = -182;
},
{
over = -14;
}
);
name = "45 Light";
stemValues = (
52,
55,
60,
62,
67,
70
);
}
);
glyphs = (
{
glyphname = space;
layers = (
{
layerId = m01;
width = 150;
}
);
note = space;
unicode = 32;
},
{
glyphname = zero;
kernLeft = zero;
kernRight = zero;
lastChange = "2023-04-04 19:32:09 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 56);
place = (-14, 56);
type = Stem;
},
{
horizontal = 1;
place = (645, 55);
place = (645, 55);
type = Stem;
},
{
place = (38, 67);
place = (38, 67);
type = Stem;
},
{
place = (478, 67);
place = (478, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,700,o),
(38,565,o),
(38,343,cs),
(38,125,o),
(129,-14,o),
(291,-14,cs),
(455,-14,o),
(545,125,o),
(545,343,cs),
(545,567,o),
(447,700,o),
(292,700,cs)
);
},
{
closed = 1;
nodes = (
(413,645,o),
(478,527,o),
(478,343,cs),
(478,155,o),
(416,42,o),
(292,42,cs),
(170,42,o),
(105,159,o),
(105,343,cs),
(105,531,o),
(170,645,o),
(292,645,cs)
);
}
);
width = 583;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
kernLeft = one;
kernRight = one;
lastChange = "2023-04-03 23:38:38 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (515, 44);
place = (515, 44);
type = Stem;
},
{
horizontal = 1;
place = (689, -20);
target = down;
type = TopGhost;
},
{
place = (177, 65);
place = (177, 65);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,587,o),
(134,564,o),
(33,559,c),
(33,515,l),
(81,515,o),
(129,515,o),
(177,515,c),
(177,0,l),
(242,0,l),
(242,689,l),
(193,689,l)
);
}
);
width = 327;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
kernLeft = two;
kernRight = two;
lastChange = "2023-04-03 23:40:42 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 60);
place = (0, 60);
type = Stem;
},
{
horizontal = 1;
place = (644, 55);
place = (644, 55);
type = Stem;
},
{
place = (48, 66);
place = (48, 66);
type = Stem;
},
{
place = (419, 66);
place = (419, 66);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,465,l),
(116,574,o),
(164,644,o),
(271,644,cs),
(361,644,o),
(419,590,o),
(419,498,cs),
(419,398,o),
(355,364,o),
(262,308,cs),
(154,243,o),
(35,176,o),
(32,0,c),
(476,0,l),
(476,60,l),
(106,60,l),
(120,155,o),
(207,208,o),
(286,255,cs),
(387,315,o),
(485,363,o),
(485,500,cs),
(485,613,o),
(404,699,o),
(275,699,cs),
(150,699,o),
(48,627,o),
(48,465,c)
);
}
);
width = 520;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
kernLeft = three;
kernRight = three;
lastChange = "2023-04-03 23:52:15 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 57);
place = (-14, 57);
type = Stem;
},
{
horizontal = 1;
place = (337, 53);
place = (337, 53);
type = Stem;
},
{
horizontal = 1;
place = (647, 53);
place = (647, 53);
type = Stem;
},
{
place = (46, 64);
place = (46, 64);
type = Stem;
},
{
place = (430, 66);
place = (430, 66);
type = Stem;
},
{
place = (407, 64);
place = (407, 64);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,483,l),
(110,576,o),
(166,647,o),
(265,647,cs),
(346,647,o),
(407,600,o),
(407,517,cs),
(407,440,o),
(354,390,o),
(260,390,cs),
(213,390,l),
(213,337,l),
(261,337,ls),
(368,337,o),
(430,284,o),
(430,193,cs),
(430,100,o),
(369,43,o),
(266,43,cs),
(163,43,o),
(93,102,o),
(89,212,c),
(24,212,l),
(25,71,o),
(130,-14,o),
(267,-14,cs),
(402,-14,o),
(496,63,o),
(496,188,cs),
(496,276,o),
(455,337,o),
(368,365,c),
(368,368,l),
(429,392,o),
(471,439,o),
(471,517,cs),
(471,631,o),
(382,700,o),
(267,700,cs),
(128,700,o),
(47,609,o),
(46,483,c)
);
}
);
width = 529;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
kernLeft = four;
kernRight = four;
lastChange = "2023-04-04 01:08:24 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (175, 54);
place = (175, 54);
type = Stem;
},
{
horizontal = 1;
place = (692, -20);
target = down;
type = TopGhost;
},
{
place = (24, 65);
place = (24, 65);
type = Stem;
},
{
place = (344, 63);
place = (344, 63);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,175,l),
(344,175,l),
(344,0,l),
(407,0,l),
(407,175,l),
(513,175,l),
(513,229,l),
(407,229,l),
(407,692,l),
(353,692,l),
(24,235,l)
);
},
{
closed = 1;
nodes = (
(344,583,l),
(344,229,l),
(89,229,l)
);
}
);
width = 537;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
kernLeft = five;
kernRight = five;
lastChange = "2023-04-04 01:35:49 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 59);
place = (-14, 59);
type = Stem;
},
{
horizontal = 1;
place = (391, 57);
place = (391, 57);
type = Stem;
},
{
horizontal = 1;
place = (627, 58);
place = (627, 58);
type = Stem;
},
{
place = (413, 66);
place = (413, 66);
type = Stem;
},
{
horizontal = 1;
place = (321, 72);
place = (321, 72);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,685,l),
(43,321,l),
(105,321,l),
(132,360,o),
(178,391,o),
(255,391,cs),
(347,391,o),
(413,327,o),
(413,221,cs),
(413,117,o),
(353,45,o),
(251,45,cs),
(152,45,o),
(101,99,o),
(90,185,c),
(26,185,l),
(29,68,o),
(123,-14,o),
(252,-14,cs),
(388,-14,o),
(479,81,o),
(479,219,cs),
(479,369,o),
(377,448,o),
(266,448,cs),
(197,448,o),
(153,428,o),
(115,393,c),
(113,393,l),
(151,627,l),
(445,627,l),
(445,685,l)
);
}
);
width = 512;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
kernLeft = six;
kernRight = six;
lastChange = "2023-04-04 01:39:36 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 54);
place = (-14, 54);
type = Stem;
},
{
horizontal = 1;
place = (387, 54);
place = (387, 54);
type = Stem;
},
{
horizontal = 1;
place = (644, 56);
place = (644, 56);
type = Stem;
},
{
place = (38, 64);
place = (38, 64);
type = Stem;
},
{
place = (445, 63);
place = (445, 63);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,621,o),
(413,700,o),
(293,700,cs),
(125,700,o),
(38,551,o),
(38,347,cs),
(38,144,o),
(100,-14,o),
(289,-14,cs),
(418,-14,o),
(509,88,o),
(508,218,cs),
(508,346,o),
(417,441,o),
(291,441,cs),
(209,441,o),
(145,401,o),
(104,330,c),
(102,330,l),
(101,519,o),
(160,644,o),
(294,644,cs),
(371,644,o),
(419,592,o),
(425,522,c),
(490,522,l)
);
},
{
closed = 1;
nodes = (
(380,387,o),
(445,318,o),
(445,216,cs),
(445,114,o),
(381,40,o),
(287,40,cs),
(188,40,o),
(119,110,o),
(119,214,cs),
(119,316,o),
(190,387,o),
(287,387,cs)
);
}
);
width = 544;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
kernLeft = seven;
kernRight = seven;
lastChange = "2023-04-04 01:43:49 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (627, 58);
place = (627, 58);
type = Stem;
},
{
place = (23, 448);
place = (23, 448);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,627,l),
(404,627,l),
(261,487,o),
(147,239,o),
(128,0,c),
(198,0,l),
(219,269,o),
(335,496,o),
(471,629,c),
(471,685,l),
(23,685,l)
);
}
);
width = 489;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
kernLeft = eight;
kernRight = eight;
lastChange = "2023-04-04 18:15:40 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 55);
place = (-14, 55);
type = Stem;
},
{
horizontal = 1;
place = (345, 53);
place = (345, 53);
type = Stem;
},
{
horizontal = 1;
place = (646, 54);
place = (646, 54);
type = Stem;
},
{
place = (32, 67);
place = (32, 67);
type = Stem;
},
{
place = (449, 65);
place = (449, 65);
type = Stem;
},
{
place = (65, 64);
place = (65, 64);
type = Stem;
},
{
place = (417, 64);
place = (417, 64);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,700,o),
(65,628,o),
(65,524,cs),
(65,453,o),
(104,400,o),
(167,375,c),
(167,372,l),
(90,345,o),
(32,288,o),
(32,192,cs),
(32,55,o),
(149,-14,o),
(275,-14,cs),
(401,-14,o),
(514,53,o),
(514,192,cs),
(514,282,o),
(454,349,o),
(378,373,c),
(378,376,l),
(441,401,o),
(481,453,o),
(481,524,cs),
(481,625,o),
(397,700,o),
(273,700,cs)
);
},
{
closed = 1;
nodes = (
(383,345,o),
(449,282,o),
(449,192,cs),
(449,104,o),
(383,41,o),
(275,41,cs),
(163,41,o),
(99,103,o),
(99,192,cs),
(99,282,o),
(162,345,o),
(272,345,cs)
);
},
{
closed = 1;
nodes = (
(364,646,o),
(417,592,o),
(417,521,cs),
(417,452,o),
(362,398,o),
(272,398,cs),
(180,398,o),
(129,452,o),
(129,521,cs),
(129,592,o),
(182,646,o),
(273,646,cs)
);
}
);
width = 547;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
kernLeft = nine;
kernRight = nine;
lastChange = "2023-04-04 02:04:52 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 56);
place = (-14, 56);
type = Stem;
},
{
horizontal = 1;
place = (245, 54);
place = (245, 54);
type = Stem;
},
{
horizontal = 1;
place = (646, 54);
place = (646, 54);
type = Stem;
},
{
place = (36, 63);
place = (36, 63);
type = Stem;
},
{
place = (443, 63);
place = (443, 63);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,245,o),
(402,284,o),
(443,352,c),
(442,194,o),
(412,42,o),
(254,42,cs),
(172,42,o),
(119,92,o),
(113,168,c),
(47,168,l),
(54,58,o),
(136,-14,o),
(256,-14,cs),
(444,-14,o),
(506,149,o),
(506,339,cs),
(506,545,o),
(445,700,o),
(260,700,cs),
(129,700,o),
(35,598,o),
(36,468,cs),
(36,340,o),
(128,245,o),
(254,245,cs)
);
},
{
closed = 1;
nodes = (
(164,299,o),
(99,368,o),
(99,470,cs),
(99,572,o),
(165,646,o),
(261,646,cs),
(358,646,o),
(427,576,o),
(427,471,cs),
(427,370,o),
(358,299,o),
(259,299,cs)
);
}
);
width = 543;
}
);
note = nine;
unicode = 57;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
lastChange = "2023-04-04 19:48:12 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (225, 55);
place = (225, 55);
type = Stem;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (8, 618);
place = (8, 618);
type = Stem;
},
{
horizontal = 1;
place = (651, 64);
place = (651, 64);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(8,0,l),
(76,0,l),
(160,225,l),
(471,225,l),
(554,0,l),
(626,0,l),
(354,715,l),
(278,715,l)
);
},
{
closed = 1;
nodes = (
(451,280,l),
(180,280,l),
(316,651,l)
);
}
);
width = 634;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
lastChange = "2023-04-04 19:48:16 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 61);
place = (0, 61);
type = Stem;
},
{
horizontal = 1;
place = (343, 58);
place = (343, 58);
type = Stem;
},
{
horizontal = 1;
place = (656, 59);
place = (656, 59);
type = Stem;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
},
{
place = (497, 68);
place = (497, 68);
type = Stem;
},
{
place = (527, 68);
place = (527, 68);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(374,0,ls),
(504,0,o),
(595,71,o),
(595,201,cs),
(595,296,o),
(538,354,o),
(456,379,c),
(528,405,o),
(565,454,o),
(565,535,cs),
(565,652,o),
(478,715,o),
(361,715,cs),
(64,715,l)
);
},
{
closed = 1;
nodes = (
(362,656,ls),
(445,656,o),
(497,611,o),
(497,530,cs),
(497,452,o),
(447,401,o),
(360,401,cs),
(131,401,l),
(131,656,l)
);
},
{
closed = 1;
nodes = (
(370,343,ls),
(464,343,o),
(527,291,o),
(527,200,cs),
(527,106,o),
(464,61,o),
(370,61,cs),
(131,61,l),
(131,343,l)
);
}
);
width = 623;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
lastChange = "2023-04-04 02:17:09 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-13, 59);
place = (-13, 59);
type = Stem;
},
{
horizontal = 1;
place = (672, 58);
place = (672, 58);
type = Stem;
},
{
place = (36, 70);
place = (36, 70);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,646,o),
(512,730,o),
(361,730,cs),
(159,730,o),
(36,573,o),
(36,357,cs),
(36,138,o),
(159,-13,o),
(358,-13,cs),
(548,-13,o),
(640,117,o),
(648,260,c),
(583,260,l),
(572,142,o),
(497,46,o),
(359,46,cs),
(195,46,o),
(106,178,o),
(106,357,cs),
(106,533,o),
(192,672,o),
(360,672,cs),
(477,672,o),
(551,606,o),
(570,513,c),
(636,513,l)
);
}
);
width = 677;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
kernRight = Eth;
lastChange = "2023-04-04 19:48:19 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 59);
place = (0, 59);
type = Stem;
},
{
horizontal = 1;
place = (656, 59);
place = (656, 59);
type = Stem;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
},
{
place = (554, 70);
place = (554, 70);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(311,0,ls),
(522,0,o),
(624,143,o),
(624,355,cs),
(624,567,o),
(529,715,o),
(318,715,cs),
(64,715,l)
);
},
{
closed = 1;
nodes = (
(316,656,ls),
(487,656,o),
(554,536,o),
(554,355,cs),
(554,174,o),
(480,59,o),
(309,59,cs),
(131,59,l),
(131,656,l)
);
}
);
width = 660;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 62);
place = (0, 62);
type = Stem;
},
{
horizontal = 1;
place = (341, 58);
place = (341, 58);
type = Stem;
},
{
horizontal = 1;
place = (656, 59);
place = (656, 59);
type = Stem;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(561,0,l),
(561,62,l),
(131,62,l),
(131,341,l),
(515,341,l),
(515,399,l),
(131,399,l),
(131,656,l),
(550,656,l),
(550,715,l),
(64,715,l)
);
}
);
width = 598;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
kernRight = F;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (344, 58);
place = (344, 58);
type = Stem;
},
{
horizontal = 1;
place = (656, 59);
place = (656, 59);
type = Stem;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(131,0,l),
(131,344,l),
(471,344,l),
(471,402,l),
(131,402,l),
(131,656,l),
(530,656,l),
(530,715,l),
(64,715,l)
);
}
);
width = 556;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
kernLeft = C;
kernRight = G;
lastChange = "2023-04-04 02:26:51 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 59);
place = (-14, 59);
type = Stem;
},
{
horizontal = 1;
place = (308, 59);
place = (308, 59);
type = Stem;
},
{
horizontal = 1;
place = (671, 58);
place = (671, 58);
type = Stem;
},
{
place = (36, 70);
place = (36, 70);
type = Stem;
},
{
place = (601, 66);
place = (601, 66);
type = Stem;
},
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(630,653,o),
(521,729,o),
(374,729,cs),
(157,729,o),
(36,568,o),
(36,357,cs),
(36,143,o),
(155,-14,o),
(364,-14,cs),
(496,-14,o),
(566,56,o),
(606,114,c),
(620,0,l),
(667,0,l),
(667,367,l),
(371,367,l),
(371,308,l),
(601,308,l),
(601,283,ls),
(601,159,o),
(530,45,o),
(365,45,cs),
(195,45,o),
(106,181,o),
(106,357,cs),
(106,530,o),
(190,671,o),
(374,671,cs),
(483,671,o),
(565,615,o),
(587,508,c),
(656,508,l)
);
}
);
width = 722;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (350, 56);
place = (350, 56);
type = Stem;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
},
{
place = (536, 67);
place = (536, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(131,0,l),
(131,350,l),
(536,350,l),
(536,0,l),
(603,0,l),
(603,715,l),
(536,715,l),
(536,406,l),
(131,406,l),
(131,715,l),
(64,715,l)
);
}
);
width = 667;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (67, 67);
place = (67, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,l),
(134,0,l),
(134,715,l),
(67,715,l)
);
}
);
width = 202;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
kernLeft = J;
kernRight = J;
lastChange = "2023-04-04 02:31:23 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-13, 57);
place = (-13, 57);
type = Stem;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (22, 66);
place = (22, 66);
type = Stem;
},
{
place = (349, 67);
place = (349, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,176,ls),
(349,84,o),
(303,44,o),
(226,44,cs),
(135,44,o),
(88,85,o),
(88,202,cs),
(88,226,l),
(22,226,l),
(22,199,ls),
(22,52,o),
(98,-13,o),
(224,-13,cs),
(354,-13,o),
(416,66,o),
(416,171,cs),
(416,715,l),
(349,715,l)
);
}
);
width = 475;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
kernRight = K;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(131,0,l),
(131,252,l),
(259,378,l),
(542,0,l),
(622,0,l),
(305,424,l),
(604,715,l),
(517,715,l),
(131,334,l),
(131,715,l),
(64,715,l)
);
}
);
width = 625;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
kernRight = L;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 62);
place = (0, 62);
type = Stem;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(512,0,l),
(512,62,l),
(131,62,l),
(131,715,l),
(64,715,l)
);
}
);
width = 536;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
lastChange = "2023-04-04 02:44:47 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (623, 92);
place = (623, 92);
type = Stem;
},
{
place = (64, 62);
place = (64, 62);
type = Stem;
},
{
place = (674, 65);
place = (674, 65);
type = Stem;
},
{
horizontal = 1;
place = (0, 91);
place = (0, 91);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(126,0,l),
(126,623,l),
(128,623,l),
(372,0,l),
(431,0,l),
(672,623,l),
(674,623,l),
(674,0,l),
(739,0,l),
(739,715,l),
(645,715,l),
(404,91,l),
(402,91,l),
(155,715,l),
(64,715,l)
);
}
);
width = 803;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
lastChange = "2023-04-04 02:46:50 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (64, 64);
place = (64, 64);
type = Stem;
},
{
place = (539, 64);
place = (539, 64);
type = Stem;
},
{
horizontal = 1;
place = (617, 98);
place = (617, 98);
type = Stem;
},
{
horizontal = 1;
place = (0, 95);
place = (0, 95);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(128,0,l),
(128,617,l),
(130,617,l),
(533,0,l),
(603,0,l),
(603,715,l),
(539,715,l),
(539,95,l),
(537,95,l),
(137,715,l),
(64,715,l)
);
}
);
width = 667;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = C;
kernRight = O;
lastChange = "2023-04-04 19:48:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 60);
place = (-14, 60);
type = Stem;
},
{
horizontal = 1;
place = (670, 60);
place = (670, 60);
type = Stem;
},
{
place = (36, 70);
place = (36, 70);
type = Stem;
},
{
place = (632, 70);
place = (632, 70);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,730,o),
(36,571,o),
(36,358,cs),
(36,145,o),
(166,-14,o),
(368,-14,cs),
(571,-14,o),
(702,145,o),
(702,358,cs),
(702,571,o),
(571,730,o),
(368,730,cs)
);
},
{
closed = 1;
nodes = (
(540,670,o),
(632,531,o),
(632,358,cs),
(632,185,o),
(540,46,o),
(368,46,cs),
(197,46,o),
(106,185,o),
(106,358,cs),
(106,531,o),
(197,670,o),
(368,670,cs)
);
}
);
width = 738;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
kernRight = P;
lastChange = "2023-04-04 19:48:25 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (311, 57);
place = (311, 57);
type = Stem;
},
{
horizontal = 1;
place = (656, 59);
place = (656, 59);
type = Stem;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
},
{
place = (495, 68);
place = (495, 68);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(131,0,l),
(131,311,l),
(336,311,ls),
(486,311,o),
(563,383,o),
(563,515,cs),
(563,643,o),
(475,715,o),
(345,715,cs),
(64,715,l)
);
},
{
closed = 1;
nodes = (
(337,656,ls),
(440,656,o),
(495,605,o),
(495,513,cs),
(495,423,o),
(447,368,o),
(331,368,cs),
(131,368,l),
(131,656,l)
);
}
);
width = 586;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
kernLeft = C;
kernRight = Q;
lastChange = "2023-04-04 19:48:28 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 60);
place = (-14, 60);
type = Stem;
},
{
horizontal = 1;
place = (670, 60);
place = (670, 60);
type = Stem;
},
{
place = (36, 70);
place = (36, 70);
type = Stem;
},
{
place = (632, 70);
place = (632, 70);
type = Stem;
},
{
horizontal = 1;
place = (-3, 21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,730,o),
(36,571,o),
(36,358,cs),
(36,145,o),
(166,-14,o),
(368,-14,cs),
(436,-14,o),
(496,4,o),
(545,36,c),
(649,-49,l),
(686,-3,l),
(592,73,l),
(662,140,o),
(702,240,o),
(702,358,cs),
(702,571,o),
(571,730,o),
(368,730,cs)
);
},
{
closed = 1;
nodes = (
(540,670,o),
(632,531,o),
(632,358,cs),
(632,257,o),
(602,169,o),
(543,113,c),
(453,186,l),
(417,141,l),
(494,77,l),
(459,57,o),
(417,46,o),
(368,46,cs),
(197,46,o),
(106,185,o),
(106,358,cs),
(106,531,o),
(197,670,o),
(368,670,cs)
);
}
);
width = 738;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
kernRight = R;
lastChange = "2023-04-04 19:48:30 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (319, 57);
place = (319, 57);
type = Stem;
},
{
horizontal = 1;
place = (656, 59);
place = (656, 59);
type = Stem;
},
{
place = (64, 67);
place = (64, 67);
type = Stem;
},
{
place = (517, 69);
place = (517, 69);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,0,l),
(131,0,l),
(131,319,l),
(349,319,ls),
(453,319,o),
(496,284,o),
(502,160,cs),
(503,133,o),
(505,111,o),
(506,93,cs),
(510,27,o),
(515,9,o),
(528,0,c),
(600,0,l),
(600,4,l),
(590,11,o),
(579,31,o),
(573,95,cs),
(571,112,o),
(570,133,o),
(569,157,cs),
(564,268,o),
(540,322,o),
(466,347,c),
(466,350,l),
(548,376,o),
(586,434,o),
(586,522,cs),
(586,641,o),
(512,715,o),
(383,715,cs),
(64,715,l)
);
},
{
closed = 1;
nodes = (
(369,656,ls),
(477,656,o),
(517,605,o),
(517,516,cs),
(517,427,o),
(464,376,o),
(360,376,cs),
(131,376,l),
(131,656,l)
);
}
);
width = 631;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = Scaron;
kernRight = Scaron;
lastChange = "2023-04-04 03:06:37 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-13, 56);
place = (-13, 56);
type = Stem;
},
{
horizontal = 1;
place = (673, 56);
place = (673, 56);
type = Stem;
},
{
place = (51, 65);
place = (51, 65);
type = Stem;
},
{
place = (496, 68);
place = (496, 68);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(529,643,o),
(449,729,o),
(290,729,cs),
(147,729,o),
(51,654,o),
(51,540,cs),
(51,415,o),
(144,375,o),
(276,349,cs),
(429,318,o),
(496,294,o),
(496,193,cs),
(496,96,o),
(418,43,o),
(313,43,cs),
(179,43,o),
(97,111,o),
(90,232,c),
(23,232,l),
(31,93,o),
(124,-13,o),
(312,-13,cs),
(462,-13,o),
(564,69,o),
(564,196,cs),
(564,346,o),
(449,380,o),
(310,407,cs),
(182,431,o),
(116,457,o),
(116,542,cs),
(116,621,o),
(182,673,o),
(291,673,cs),
(393,673,o),
(465,621,o),
(477,520,c),
(542,520,l)
);
}
);
width = 599;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
kernLeft = T;
kernRight = T;
lastChange = "2023-04-04 03:08:38 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (655, 60);
place = (655, 60);
type = Stem;
},
{
place = (261, 67);
place = (261, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,655,l),
(261,655,l),
(261,0,l),
(328,0,l),
(328,655,l),
(569,655,l),
(569,715,l),
(19,715,l)
);
}
);
width = 588;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
lastChange = "2023-04-04 03:08:43 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-11, 58);
place = (-11, 58);
type = Stem;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (56, 67);
place = (56, 67);
type = Stem;
},
{
place = (514, 67);
place = (514, 67);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,227,ls),
(56,63,o),
(160,-11,o),
(316,-11,cs),
(471,-11,o),
(581,61,o),
(581,227,cs),
(581,715,l),
(514,715,l),
(514,233,ls),
(514,101,o),
(438,47,o),
(319,47,cs),
(194,47,o),
(123,101,o),
(123,233,cs),
(123,715,l),
(56,715,l)
);
}
);
width = 636;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
kernLeft = V;
kernRight = V;
lastChange = "2023-04-04 03:08:46 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (8, 588);
place = (8, 588);
type = Stem;
},
{
horizontal = 1;
place = (0, 69);
place = (0, 69);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,0,l),
(337,0,l),
(596,715,l),
(528,715,l),
(303,69,l),
(301,69,l),
(78,715,l),
(8,715,l)
);
}
);
width = 604;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
kernLeft = W;
kernRight = W;
lastChange = "2023-04-04 03:17:49 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (12, 856);
place = (12, 856);
type = Stem;
},
{
horizontal = 1;
place = (637, 78);
place = (637, 78);
type = Stem;
},
{
horizontal = 1;
place = (0, 92);
place = (0, 92);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,0,l),
(273,0,l),
(440,637,l),
(442,637,l),
(606,0,l),
(674,0,l),
(868,715,l),
(801,715,l),
(643,92,l),
(641,92,l),
(477,715,l),
(405,715,l),
(240,92,l),
(238,92,l),
(81,715,l),
(12,715,l)
);
}
);
width = 880;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
kernLeft = X;
kernRight = X;
lastChange = "2023-04-04 04:43:40 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (12, 566);
place = (12, 566);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,365,l),
(12,0,l),
(88,0,l),
(294,316,l),
(296,316,l),
(499,0,l),
(578,0,l),
(336,364,l),
(567,715,l),
(493,715,l),
(300,413,l),
(298,413,l),
(103,715,l),
(26,715,l)
);
}
);
width = 590;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Yacute;
kernRight = Yacute;
lastChange = "2023-04-04 04:45:40 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (265, 68);
place = (265, 68);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,312,l),
(265,0,l),
(333,0,l),
(333,310,l),
(593,715,l),
(521,715,l),
(301,369,l),
(299,369,l),
(81,715,l),
(7,715,l)
);
}
);
width = 600;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Zcaron;
kernRight = Zcaron;
lastChange = "2023-04-04 04:53:57 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 60);
place = (0, 60);
type = Stem;
},
{
horizontal = 1;
place = (658, 57);
place = (658, 57);
type = Stem;
},
{
place = (26, 78);
place = (26, 78);
type = Stem;
},
{
place = (463, 81);
place = (463, 81);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,658,l),
(463,658,l),
(463,655,l),
(26,65,l),
(26,0,l),
(560,0,l),
(560,60,l),
(104,60,l),
(104,63,l),
(544,658,l),
(544,715,l),
(53,715,l)
);
}
);
width = 593;
}
);
note = Z;
unicode = 90;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
lastChange = "2023-04-04 19:48:34 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-12, 50);
place = (-12, 50);
type = Stem;
},
{
horizontal = 1;
place = (478, 50);
place = (478, 50);
type = Stem;
},
{
place = (23, 65);
place = (23, 65);
type = Stem;
},
{
place = (376, 58);
place = (376, 58);
type = Stem;
},
{
horizontal = 1;
place = (-7, 49);
place = (-7, 49);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,363,l),
(111,440,o),
(159,478,o),
(251,478,cs),
(331,478,o),
(375,444,o),
(375,374,cs),
(375,312,o),
(338,306,o),
(236,294,cs),
(119,280,o),
(23,255,o),
(23,132,cs),
(23,36,o),
(96,-12,o),
(192,-12,cs),
(291,-12,o),
(344,36,o),
(373,77,c),
(376,77,l),
(376,66,ls),
(379,16,o),
(407,-7,o),
(452,-7,cs),
(472,-7,o),
(485,-3,o),
(494,1,c),
(494,46,l),
(491,46,l),
(482,44,o),
(475,42,o),
(468,42,cs),
(446,43,o),
(434,56,o),
(434,87,cs),
(434,368,ls),
(434,481,o),
(364,528,o),
(251,528,cs),
(118,528,o),
(52,463,o),
(45,363,c)
);
},
{
closed = 1;
nodes = (
(376,187,ls),
(376,116,o),
(316,38,o),
(203,38,cs),
(142,38,o),
(88,60,o),
(88,132,cs),
(88,221,o),
(155,234,o),
(242,246,cs),
(292,253,o),
(343,262,o),
(376,280,c)
);
}
);
width = 499;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
kernLeft = b;
kernRight = thorn;
lastChange = "2023-04-04 19:48:36 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 52);
place = (-14, 52);
type = Stem;
},
{
horizontal = 1;
place = (476, 52);
place = (476, 52);
type = Stem;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (52, 62);
place = (52, 62);
type = Stem;
},
{
place = (441, 63);
place = (441, 63);
type = Stem;
},
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,0,l),
(114,0,l),
(114,78,l),
(116,78,l),
(156,17,o),
(208,-14,o),
(287,-14,cs),
(423,-14,o),
(504,98,o),
(504,257,cs),
(504,429,o),
(415,528,o),
(291,528,cs),
(209,528,o),
(152,488,o),
(116,428,c),
(114,428,l),
(114,715,l),
(52,715,l)
);
},
{
closed = 1;
nodes = (
(386,476,o),
(441,385,o),
(441,256,cs),
(441,135,o),
(390,38,o),
(284,38,cs),
(169,38,o),
(109,127,o),
(109,256,cs),
(109,379,o),
(169,476,o),
(283,476,cs)
);
}
);
width = 530;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
lastChange = "2023-04-04 05:10:58 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-13, 53);
place = (-13, 53);
type = Stem;
},
{
horizontal = 1;
place = (477, 52);
place = (477, 52);
type = Stem;
},
{
place = (25, 64);
place = (25, 64);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,467,o),
(375,529,o),
(261,529,cs),
(111,529,o),
(25,412,o),
(25,258,cs),
(25,104,o),
(109,-13,o),
(260,-13,cs),
(383,-13,o),
(460,61,o),
(472,178,c),
(413,178,l),
(403,95,o),
(348,40,o),
(260,40,cs),
(143,40,o),
(89,138,o),
(89,258,cs),
(89,378,o),
(142,477,o),
(261,477,cs),
(341,477,o),
(392,438,o),
(407,361,c),
(469,361,l)
);
}
);
width = 491;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
kernLeft = d;
kernRight = d;
lastChange = "2023-04-04 19:48:38 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 52);
place = (-14, 52);
type = Stem;
},
{
horizontal = 1;
place = (476, 52);
place = (476, 52);
type = Stem;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (25, 64);
place = (25, 64);
type = Stem;
},
{
place = (418, 62);
place = (418, 62);
type = Stem;
},
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(418,431,l),
(416,431,l),
(383,491,o),
(325,528,o),
(246,528,cs),
(123,528,o),
(25,429,o),
(25,257,cs),
(25,98,o),
(109,-14,o),
(248,-14,cs),
(326,-14,o),
(378,18,o),
(416,77,c),
(418,77,l),
(418,0,l),
(480,0,l),
(480,715,l),
(418,715,l)
);
},
{
closed = 1;
nodes = (
(362,476,o),
(423,383,o),
(423,256,cs),
(423,127,o),
(363,38,o),
(250,38,cs),
(141,38,o),
(89,135,o),
(89,256,cs),
(89,385,o),
(148,476,o),
(250,476,cs)
);
}
);
width = 532;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = c;
kernRight = e;
lastChange = "2023-04-04 19:48:40 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-13, 53);
place = (-13, 53);
type = Stem;
},
{
horizontal = 1;
place = (247, 49);
place = (247, 49);
type = Stem;
},
{
horizontal = 1;
place = (478, 51);
place = (478, 51);
type = Stem;
},
{
place = (25, 64);
place = (25, 64);
type = Stem;
},
{
place = (418, 65);
place = (418, 65);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,392,o),
(427,529,o),
(261,529,cs),
(118,529,o),
(25,413,o),
(25,258,cs),
(25,103,o),
(111,-13,o),
(266,-13,cs),
(382,-13,o),
(455,54,o),
(477,156,c),
(417,156,l),
(397,86,o),
(352,40,o),
(266,40,cs),
(148,40,o),
(92,131,o),
(89,247,c),
(483,247,l)
);
},
{
closed = 1;
nodes = (
(90,296,l),
(101,399,o),
(156,478,o),
(261,478,cs),
(367,478,o),
(415,398,o),
(418,296,c)
);
}
);
width = 508;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
kernRight = f;
lastChange = "2023-04-04 05:30:52 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (466, 51);
place = (466, 51);
type = Stem;
},
{
horizontal = 1;
place = (666, 54);
place = (666, 54);
type = Stem;
},
{
place = (91, 61);
place = (91, 61);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,466,l),
(91,466,l),
(91,0,l),
(152,0,l),
(152,466,l),
(248,466,l),
(248,517,l),
(152,517,l),
(152,607,ls),
(152,646,o),
(168,666,o),
(220,666,cs),
(229,666,o),
(238,666,o),
(247,666,c),
(247,719,l),
(243,719,o),
(219,720,o),
(212,720,cs),
(133,720,o),
(91,686,o),
(91,609,cs),
(91,517,l),
(16,517,l)
);
}
);
width = 269;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
kernLeft = g;
kernRight = g;
lastChange = "2023-04-04 19:48:43 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-181, 51);
place = (-181, 51);
type = Stem;
},
{
horizontal = 1;
place = (10, 52);
place = (10, 52);
type = Stem;
},
{
horizontal = 1;
place = (476, 52);
place = (476, 52);
type = Stem;
},
{
place = (25, 64);
place = (25, 64);
type = Stem;
},
{
place = (414, 61);
place = (414, 61);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,437,l),
(411,437,l),
(377,493,o),
(327,528,o),
(247,528,cs),
(127,528,o),
(25,436,o),
(25,268,cs),
(25,116,o),
(111,10,o),
(247,10,cs),
(325,10,o),
(373,42,o),
(411,100,c),
(414,100,l),
(414,18,ls),
(414,-73,o),
(362,-130,o),
(252,-130,cs),
(177,-130,o),
(118,-106,o),
(107,-46,c),
(47,-46,l),
(56,-123,o),
(127,-181,o),
(254,-181,cs),
(388,-181,o),
(475,-113,o),
(475,20,cs),
(475,517,l),
(414,517,l)
);
},
{
closed = 1;
nodes = (
(364,476,o),
(418,391,o),
(418,269,cs),
(418,145,o),
(365,62,o),
(250,62,cs),
(141,62,o),
(89,149,o),
(89,267,cs),
(89,393,o),
(149,476,o),
(251,476,cs)
);
}
);
width = 527;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
kernLeft = b;
kernRight = h;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (475, 53);
place = (475, 53);
type = Stem;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (55, 62);
place = (55, 62);
type = Stem;
},
{
place = (395, 62);
place = (395, 62);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,0,l),
(117,0,l),
(117,328,ls),
(117,413,o),
(189,475,o),
(277,475,cs),
(350,475,o),
(395,439,o),
(395,361,cs),
(395,0,l),
(457,0,l),
(457,367,ls),
(457,471,o),
(388,528,o),
(292,528,cs),
(210,528,o),
(154,490,o),
(119,438,c),
(117,438,l),
(117,715,l),
(55,715,l)
);
}
);
width = 505;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = b;
kernRight = d;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = (627, 88);
place = (627, 88);
type = Stem;
},
{
place = (54, 62);
place = (54, 62);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,0,l),
(116,0,l),
(116,517,l),
(54,517,l)
);
},
{
closed = 1;
nodes = (
(54,627,l),
(116,627,l),
(116,715,l),
(54,715,l)
);
}
);
width = 169;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
kernLeft = j;
kernRight = j;
lastChange = "2023-04-04 05:41:07 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-158, 52);
place = (-158, 52);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = (627, 88);
place = (627, 88);
type = Stem;
},
{
place = (54, 62);
place = (54, 62);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,-47,ls),
(54,-89,o),
(36,-106,o),
(-2,-106,cs),
(-6,-106,o),
(-15,-106,o),
(-20,-105,c),
(-20,-157,l),
(-15,-158,o),
(-2,-158,o),
(6,-158,cs),
(73,-158,o),
(116,-134,o),
(116,-50,cs),
(116,517,l),
(54,517,l)
);
},
{
closed = 1;
nodes = (
(54,627,l),
(116,627,l),
(116,715,l),
(54,715,l)
);
}
);
width = 169;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
kernLeft = b;
kernRight = k;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (52, 62);
place = (52, 62);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,0,l),
(114,0,l),
(114,199,l),
(209,290,l),
(402,0,l),
(474,0,l),
(252,330,l),
(450,517,l),
(371,517,l),
(114,268,l),
(114,715,l),
(52,715,l)
);
}
);
width = 476;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernLeft = b;
kernRight = d;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (715, -20);
target = down;
type = TopGhost;
},
{
place = (55, 62);
place = (55, 62);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,0,l),
(117,0,l),
(117,715,l),
(55,715,l)
);
}
);
width = 172;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
kernLeft = m;
kernRight = h;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (475, 53);
place = (475, 53);
type = Stem;
},
{
place = (52, 62);
place = (52, 62);
type = Stem;
},
{
place = (363, 62);
place = (363, 62);
type = Stem;
},
{
place = (674, 61);
place = (674, 61);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,0,l),
(114,0,l),
(114,329,ls),
(114,413,o),
(185,475,o),
(259,475,cs),
(319,475,o),
(363,439,o),
(363,362,cs),
(363,0,l),
(425,0,l),
(425,329,ls),
(425,421,o),
(489,475,o),
(565,475,cs),
(628,475,o),
(674,439,o),
(674,362,cs),
(674,0,l),
(735,0,l),
(735,367,ls),
(735,471,o),
(667,528,o),
(579,528,cs),
(506,528,o),
(447,493,o),
(413,434,c),
(411,434,l),
(390,496,o),
(336,528,o),
(273,528,cs),
(199,528,o),
(149,491,o),
(116,439,c),
(114,439,l),
(114,517,l),
(52,517,l)
);
}
);
width = 784;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = m;
kernRight = h;
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (475, 53);
place = (475, 53);
type = Stem;
},
{
place = (52, 62);
place = (52, 62);
type = Stem;
},
{
place = (392, 62);
place = (392, 62);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,0,l),
(114,0,l),
(114,328,ls),
(114,413,o),
(186,475,o),
(274,475,cs),
(347,475,o),
(392,439,o),
(392,361,cs),
(392,0,l),
(454,0,l),
(454,367,ls),
(454,471,o),
(385,528,o),
(289,528,cs),
(207,528,o),
(151,490,o),
(116,438,c),
(114,438,l),
(114,517,l),
(52,517,l)
);
}
);
width = 502;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = c;
kernRight = o;
lastChange = "2023-04-04 19:48:49 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-13, 52);
place = (-13, 52);
type = Stem;
},
{
horizontal = 1;
place = (477, 52);
place = (477, 52);
type = Stem;
},
{
place = (25, 64);
place = (25, 64);
type = Stem;
},
{
place = (440, 63);
place = (440, 63);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,529,o),
(25,412,o),
(25,258,cs),
(25,104,o),
(116,-13,o),
(265,-13,cs),
(414,-13,o),
(503,104,o),
(503,258,cs),
(503,412,o),
(414,529,o),
(265,529,cs)
);
},
{
closed = 1;
nodes = (
(380,477,o),
(440,379,o),
(440,258,cs),
(440,137,o),
(380,39,o),
(265,39,cs),
(149,39,o),
(89,137,o),
(89,258,cs),
(89,379,o),
(149,477,o),
(265,477,cs)
);
}
);
width = 529;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
kernLeft = p;
kernRight = thorn;
lastChange = "2023-04-04 19:48:51 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-166, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (-13, 52);
place = (-13, 52);
type = Stem;
},
{
horizontal = 1;
place = (476, 52);
place = (476, 52);
type = Stem;
},
{
place = (52, 62);
place = (52, 62);
type = Stem;
},
{
place = (442, 63);
place = (442, 63);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,-166,l),
(114,-166,l),
(114,75,l),
(116,75,l),
(155,18,o),
(208,-13,o),
(287,-13,cs),
(423,-13,o),
(505,99,o),
(505,258,cs),
(505,430,o),
(415,528,o),
(291,528,cs),
(209,528,o),
(152,489,o),
(116,428,c),
(114,428,l),
(114,517,l),
(52,517,l)
);
},
{
closed = 1;
nodes = (
(386,476,o),
(442,386,o),
(442,257,cs),
(442,137,o),
(390,39,o),
(284,39,cs),
(166,39,o),
(109,129,o),
(109,256,cs),
(109,379,o),
(169,476,o),
(283,476,cs)
);
}
);
width = 530;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
kernLeft = d;
kernRight = q;
lastChange = "2023-04-04 19:48:53 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-166, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (-13, 52);
place = (-13, 52);
type = Stem;
},
{
horizontal = 1;
place = (476, 52);
place = (476, 52);
type = Stem;
},
{
place = (27, 63);
place = (27, 63);
type = Stem;
},
{
place = (418, 62);
place = (418, 62);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(418,517,l),
(418,435,l),
(416,435,l),
(381,492,o),
(327,528,o),
(247,528,cs),
(125,528,o),
(27,429,o),
(27,257,cs),
(27,98,o),
(108,-13,o),
(247,-13,cs),
(325,-13,o),
(377,19,o),
(416,77,c),
(418,77,l),
(418,-166,l),
(480,-166,l),
(480,517,l)
);
},
{
closed = 1;
nodes = (
(365,476,o),
(423,383,o),
(423,256,cs),
(423,127,o),
(364,39,o),
(250,39,cs),
(140,39,o),
(90,135,o),
(90,256,cs),
(90,385,o),
(148,476,o),
(251,476,cs)
);
}
);
width = 532;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = m;
kernRight = r;
lastChange = "2023-04-04 06:02:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (458, 63);
place = (458, 63);
type = Stem;
},
{
place = (52, 62);
place = (52, 62);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,0,l),
(114,0,l),
(114,294,ls),
(114,387,o),
(177,458,o),
(264,460,cs),
(273,460,o),
(282,459,o),
(291,458,c),
(291,519,l),
(287,520,o),
(282,521,o),
(274,521,cs),
(202,521,o),
(148,481,o),
(116,421,c),
(114,421,l),
(114,517,l),
(52,517,l)
);
}
);
width = 308;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = scaron;
kernRight = scaron;
lastChange = "2023-04-04 06:04:35 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-14, 53);
place = (-14, 53);
type = Stem;
},
{
horizontal = 1;
place = (477, 51);
place = (477, 51);
type = Stem;
},
{
place = (38, 62);
place = (38, 62);
type = Stem;
},
{
place = (365, 62);
place = (365, 62);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(398,466,o),
(341,528,o),
(218,528,cs),
(112,528,o),
(38,474,o),
(38,388,cs),
(38,288,o),
(122,263,o),
(227,239,cs),
(333,215,o),
(365,196,o),
(365,139,cs),
(365,79,o),
(320,39,o),
(234,39,cs),
(151,39,o),
(91,74,o),
(82,161,c),
(19,161,l),
(25,61,o),
(95,-14,o),
(233,-14,cs),
(353,-14,o),
(427,48,o),
(427,140,cs),
(427,247,o),
(352,273,o),
(248,295,cs),
(149,318,o),
(100,332,o),
(100,391,cs),
(100,439,o),
(138,477,o),
(218,477,cs),
(295,477,o),
(341,442,o),
(348,375,c),
(410,375,l)
);
}
);
width = 451;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
kernLeft = t;
kernRight = t;
lastChange = "2023-04-04 06:06:19 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-4, 54);
place = (-4, 54);
type = Stem;
},
{
horizontal = 1;
place = (466, 51);
place = (466, 51);
type = Stem;
},
{
place = (95, 62);
place = (95, 62);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,466,l),
(95,466,l),
(95,89,ls),
(95,23,o),
(135,-4,o),
(194,-4,cs),
(216,-4,o),
(234,-1,o),
(251,5,c),
(251,58,l),
(239,54,o),
(221,50,o),
(207,50,cs),
(174,50,o),
(157,62,o),
(157,99,cs),
(157,466,l),
(253,466,l),
(253,517,l),
(157,517,l),
(157,676,l),
(95,676,l),
(95,517,l),
(17,517,l)
);
}
);
width = 282;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
lastChange = "2023-04-04 06:07:30 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-12, 52);
place = (-12, 52);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
},
{
place = (48, 62);
place = (48, 62);
type = Stem;
},
{
place = (382, 61);
place = (382, 61);
type = Stem;
},
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,152,ls),
(48,48,o),
(118,-12,o),
(218,-12,cs),
(300,-12,o),
(344,26,o),
(380,76,c),
(382,76,l),
(382,0,l),
(443,0,l),
(443,517,l),
(382,517,l),
(382,194,ls),
(382,106,o),
(320,40,o),
(232,40,cs),
(157,40,o),
(110,78,o),
(110,156,cs),
(110,517,l),
(48,517,l)
);
}
);
width = 495;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
kernLeft = v;
kernRight = v;
lastChange = "2023-04-04 06:09:21 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
},
{
place = (6, 443);
place = (6, 443);
type = Stem;
},
{
horizontal = 1;
place = (0, 58);
place = (0, 58);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,0,l),
(262,0,l),
(449,517,l),
(386,517,l),
(227,58,l),
(225,58,l),
(72,517,l),
(6,517,l)
);
}
);
width = 456;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
kernLeft = w;
kernRight = w;
lastChange = "2023-04-04 06:11:01 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 62);
place = (0, 62);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
},
{
place = (10, 691);
place = (10, 691);
type = Stem;
},
{
horizontal = 1;
place = (447, 70);
place = (447, 70);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,l),
(234,0,l),
(352,447,l),
(354,447,l),
(470,0,l),
(538,0,l),
(701,517,l),
(638,517,l),
(506,62,l),
(504,62,l),
(388,517,l),
(321,517,l),
(200,62,l),
(198,62,l),
(75,517,l),
(10,517,l)
);
}
);
width = 711;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
kernLeft = x;
kernRight = x;
lastChange = "2023-04-04 06:13:37 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 21);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
},
{
place = (8, 465);
place = (8, 465);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,273,l),
(8,0,l),
(78,0,l),
(237,233,l),
(239,233,l),
(400,0,l),
(473,0,l),
(275,278,l),
(443,517,l),
(373,517,l),
(238,318,l),
(236,318,l),
(101,517,l),
(29,517,l)
);
}
);
width = 481;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = yacute;
kernRight = yacute;
lastChange = "2023-04-04 20:08:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (-171, 56);
place = (-171, 56);
type = Stem;
},
{
horizontal = 1;
place = (517, -20);
target = down;
type = TopGhost;
},
{
place = (7, 455);
place = (7, 455);
type = Stem;
},
{
horizontal = 1;
place = (-163, 21);
target = up;
type = BottomGhost;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,1,l),
(200,-14,o),
(195,-30,o),
(189,-45,cs),
(170,-98,o),
(142,-115,o),
(103,-115,cs),
(79,-115,o),
(65,-111,o),
(53,-108,c),
(53,-163,l),
(69,-168,o),
(83,-171,o),
(106,-171,cs),
(173,-171,o),
(214,-147,o),
(249,-54,cs),
(462,517,l),
(398,517,l),
(240,65,l),
(238,65,l),
(73,517,l),
(7,517,l)
);
}
);
width = 469;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = zcaron;
kernRight = zcaron;
lastChange = "2023-04-04 06:20:07 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = (0, 55);
place = (0, 55);
type = Stem;
},
{
horizontal = 1;
place = (463, 54);
place = (463, 54);
type = Stem;
},
{
place = (28, 77);
place = (28, 77);
type = Stem;
},
{
place = (330, 83);
place = (330, 83);
type = Stem;
}
);
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,463,l),
(330,463,l),
(330,460,l),
(28,53,l),
(28,0,l),
(422,0,l),
(422,55,l),
(105,55,l),
(105,58,l),
(413,473,l),
(413,517,l),
(48,517,l)
);
}
);
width = 447;
}
);
note = z;
unicode = 122;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = "45 Light";
properties = (
{
key = styleNames;
values = (
{
language = ENG;
value = "45 Light";
}
);
},
{
key = postscriptFullName;
value = "Neue Haas Grotesk Display Pro 45 Light";
},
{
key = postscriptFontName;
value = "NeueHaasDisplay-Light";
}
);
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 5;
"@MMK_R_C" = -40;
"@MMK_R_Scaron" = -10;
"@MMK_R_T" = -85;
"@MMK_R_U" = -20;
"@MMK_R_V" = -80;
"@MMK_R_W" = -60;
"@MMK_R_Yacute" = -80;
"@MMK_R_ampersand" = -10;
"@MMK_R_asterisk" = -100;
"@MMK_R_at" = -15;
"@MMK_R_backslash" = -90;
"@MMK_R_bracketright" = -5;
"@MMK_R_c" = -20;
"@MMK_R_colon" = 10;
"@MMK_R_comma" = 15;
"@MMK_R_copyright" = -35;
"@MMK_R_d" = -20;
"@MMK_R_f" = -15;
"@MMK_R_g" = -20;
"@MMK_R_guillemotleft" = -35;
"@MMK_R_guillemotright" = -10;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_periodcentered" = -30;
"@MMK_R_question" = -50;
"@MMK_R_quotedbl" = -85;
"@MMK_R_quotedblleft" = -85;
"@MMK_R_quotedblright" = -85;
"@MMK_R_quotesinglbase" = 15;
"@MMK_R_registered" = -35;
"@MMK_R_scaron" = -5;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -30;
"@MMK_R_trademark" = -80;
"@MMK_R_u" = -15;
"@MMK_R_v" = -45;
"@MMK_R_w" = -45;
"@MMK_R_yacute" = -45;
};
"@MMK_L_C" = {
"@MMK_R_A" = -20;
"@MMK_R_AE" = -20;
"@MMK_R_T" = -30;
"@MMK_R_V" = -20;
"@MMK_R_W" = -10;
"@MMK_R_X" = -40;
"@MMK_R_Yacute" = -40;
"@MMK_R_Zcaron" = -20;
"@MMK_R_ampersand" = 5;
"@MMK_R_backslash" = -25;
"@MMK_R_comma" = -30;
"@MMK_R_hyphen" = 10;
"@MMK_R_hyphen.cap" = 10;
"@MMK_R_question" = 5;
"@MMK_R_quotedbl" = 5;
"@MMK_R_quotedblleft" = 5;
"@MMK_R_quotedblright" = 5;
"@MMK_R_quotesinglbase" = -30;
"@MMK_R_slash" = -25;
"@MMK_R_x" = -15;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_E" = {
"@MMK_R_A" = 5;
"@MMK_R_C" = -20;
"@MMK_R_J" = -5;
"@MMK_R_Scaron" = -10;
"@MMK_R_a" = -5;
"@MMK_R_ampersand" = -10;
"@MMK_R_c" = -25;
"@MMK_R_comma" = 15;
"@MMK_R_d" = -15;
"@MMK_R_f" = -15;
"@MMK_R_g" = -15;
"@MMK_R_germandbls" = -10;
"@MMK_R_guillemotleft" = -25;
"@MMK_R_hyphen" = -5;
"@MMK_R_hyphen.cap" = -5;
"@MMK_R_question" = -5;
"@MMK_R_quotesinglbase" = 15;
"@MMK_R_scaron" = -10;
"@MMK_R_t" = -15;
"@MMK_R_u" = -10;
"@MMK_R_v" = -25;
"@MMK_R_w" = -25;
"@MMK_R_yacute" = -25;
"@MMK_R_zcaron" = -5;
};
"@MMK_L_Eth" = {
"@MMK_R_A" = -40;
"@MMK_R_AE" = -50;
"@MMK_R_J" = -10;
"@MMK_R_T" = -50;
"@MMK_R_V" = -40;
"@MMK_R_W" = -30;
"@MMK_R_X" = -55;
"@MMK_R_Yacute" = -60;
"@MMK_R_Zcaron" = -35;
"@MMK_R_a" = -10;
"@MMK_R_asterisk" = -20;
"@MMK_R_backslash" = -45;
"@MMK_R_bracketright" = -5;
"@MMK_R_comma" = -55;
"@MMK_R_quotedbl" = -25;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -25;
"@MMK_R_quotesinglbase" = -55;
"@MMK_R_slash" = -45;
"@MMK_R_trademark" = -30;
"@MMK_R_v" = -5;
"@MMK_R_w" = -5;
"@MMK_R_x" = -20;
"@MMK_R_zcaron" = -20;
};
"@MMK_L_F" = {
"@MMK_R_A" = -70;
"@MMK_R_AE" = -85;
"@MMK_R_C" = -20;
"@MMK_R_J" = -70;
"@MMK_R_Scaron" = -20;
"@MMK_R_T" = 5;
"@MMK_R_W" = 5;
"@MMK_R_Zcaron" = -5;
"@MMK_R_a" = -50;
"@MMK_R_bracketright" = 15;
"@MMK_R_c" = -45;
"@MMK_R_colon" = -25;
"@MMK_R_comma" = -80;
"@MMK_R_copyright" = -5;
"@MMK_R_d" = -40;
"@MMK_R_f" = -15;
"@MMK_R_g" = -40;
"@MMK_R_guillemotleft" = -45;
"@MMK_R_guillemotright" = -25;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_m" = -30;
"@MMK_R_quotedbl" = 10;
"@MMK_R_quotedblleft" = 10;
"@MMK_R_quotedblright" = 10;
"@MMK_R_quotesinglbase" = -80;
"@MMK_R_scaron" = -40;
"@MMK_R_t" = -15;
"@MMK_R_u" = -35;
"@MMK_R_w" = -35;
"@MMK_R_yacute" = -30;
"@MMK_R_zcaron" = -40;
};
"@MMK_L_G" = {
"@MMK_R_T" = -45;
"@MMK_R_V" = -35;
"@MMK_R_W" = -30;
"@MMK_R_X" = -15;
"@MMK_R_Yacute" = -50;
"@MMK_R_Zcaron" = -5;
"@MMK_R_asterisk" = -15;
"@MMK_R_backslash" = -45;
"@MMK_R_question" = -5;
"@MMK_R_quotedbl" = -15;
"@MMK_R_quotedblleft" = -20;
"@MMK_R_quotedblright" = -15;
"@MMK_R_t" = -5;
"@MMK_R_trademark" = -25;
"@MMK_R_v" = -5;
"@MMK_R_w" = -5;
"@MMK_R_yacute" = -5;
};
"@MMK_L_J" = {
"@MMK_R_A" = -10;
"@MMK_R_AE" = -15;
"@MMK_R_comma" = -15;
"@MMK_R_question" = 5;
"@MMK_R_quotesinglbase" = -15;
"@MMK_R_slash" = -15;
"@MMK_R_x" = -5;
"@MMK_R_zcaron" = -10;
};
"@MMK_L_K" = {
"@MMK_R_C" = -60;
"@MMK_R_J" = -20;
"@MMK_R_Scaron" = -35;
"@MMK_R_U" = -10;
"@MMK_R_a" = -15;
"@MMK_R_ampersand" = -20;
"@MMK_R_asterisk" = -25;
"@MMK_R_at" = -25;
"@MMK_R_bracketright" = 5;
"@MMK_R_c" = -45;
"@MMK_R_comma" = 10;
"@MMK_R_copyright" = -40;
"@MMK_R_d" = -40;
"@MMK_R_f" = -25;
"@MMK_R_g" = -40;
"@MMK_R_germandbls" = -5;
"@MMK_R_guillemotleft" = -80;
"@MMK_R_guillemotright" = -25;
"@MMK_R_hyphen" = -75;
"@MMK_R_hyphen.cap" = -75;
"@MMK_R_periodcentered" = -70;
"@MMK_R_question" = -35;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quotesinglbase" = 10;
"@MMK_R_registered" = -40;
"@MMK_R_scaron" = -20;
"@MMK_R_slash" = 5;
"@MMK_R_t" = -30;
"@MMK_R_u" = -25;
"@MMK_R_v" = -45;
"@MMK_R_w" = -45;
"@MMK_R_yacute" = -45;
};
"@MMK_L_L" = {
"@MMK_R_AE" = 10;
"@MMK_R_C" = -50;
"@MMK_R_J" = -5;
"@MMK_R_Scaron" = -20;
"@MMK_R_T" = -105;
"@MMK_R_U" = -25;
"@MMK_R_V" = -90;
"@MMK_R_W" = -75;
"@MMK_R_Yacute" = -105;
"@MMK_R_Zcaron" = 15;
"@MMK_R_a" = -5;
"@MMK_R_ampersand" = -10;
"@MMK_R_asterisk" = -110;
"@MMK_R_at" = -15;
"@MMK_R_backslash" = -105;
"@MMK_R_c" = -25;
"@MMK_R_colon" = 10;
"@MMK_R_comma" = 15;
"@MMK_R_copyright" = -40;
"@MMK_R_d" = -25;
"@MMK_R_f" = -30;
"@MMK_R_g" = -20;
"@MMK_R_guillemotleft" = -50;
"@MMK_R_guillemotright" = -10;
"@MMK_R_hyphen" = -35;
"@MMK_R_hyphen.cap" = -35;
"@MMK_R_periodcentered" = -30;
"@MMK_R_question" = -60;
"@MMK_R_quotedbl" = -85;
"@MMK_R_quotedblleft" = -80;
"@MMK_R_quotedblright" = -85;
"@MMK_R_quotesinglbase" = 15;
"@MMK_R_registered" = -40;
"@MMK_R_scaron" = -10;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -30;
"@MMK_R_trademark" = -80;
"@MMK_R_u" = -20;
"@MMK_R_v" = -60;
"@MMK_R_w" = -60;
"@MMK_R_yacute" = -55;
};
"@MMK_L_O" = {
"@MMK_R_A" = -40;
"@MMK_R_AE" = -50;
"@MMK_R_J" = -10;
"@MMK_R_T" = -50;
"@MMK_R_V" = -40;
"@MMK_R_W" = -30;
"@MMK_R_X" = -55;
"@MMK_R_Yacute" = -60;
"@MMK_R_Zcaron" = -35;
"@MMK_R_a" = -10;
"@MMK_R_asterisk" = -20;
"@MMK_R_backslash" = -45;
"@MMK_R_bracketright" = -5;
"@MMK_R_comma" = -55;
"@MMK_R_quotedbl" = -25;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -25;
"@MMK_R_quotesinglbase" = -55;
"@MMK_R_slash" = -45;
"@MMK_R_trademark" = -30;
"@MMK_R_v" = -5;
"@MMK_R_w" = -5;
"@MMK_R_x" = -20;
"@MMK_R_zcaron" = -20;
};
"@MMK_L_P" = {
"@MMK_R_A" = -65;
"@MMK_R_AE" = -80;
"@MMK_R_C" = 5;
"@MMK_R_J" = -60;
"@MMK_R_T" = -10;
"@MMK_R_U" = 10;
"@MMK_R_W" = 5;
"@MMK_R_Yacute" = -5;
"@MMK_R_Zcaron" = -25;
"@MMK_R_a" = -25;
"@MMK_R_bracketright" = -5;
"@MMK_R_c" = -25;
"@MMK_R_colon" = -5;
"@MMK_R_comma" = -100;
"@MMK_R_copyright" = 10;
"@MMK_R_d" = -20;
"@MMK_R_f" = 15;
"@MMK_R_g" = -20;
"@MMK_R_guillemotleft" = -40;
"@MMK_R_guillemotright" = -10;
"@MMK_R_hyphen" = -30;
"@MMK_R_hyphen.cap" = -30;
"@MMK_R_quotedbl" = 15;
"@MMK_R_quotedblleft" = 15;
"@MMK_R_quotedblright" = 15;
"@MMK_R_quotesinglbase" = -100;
"@MMK_R_scaron" = -10;
"@MMK_R_t" = 10;
"@MMK_R_w" = 15;
"@MMK_R_yacute" = 15;
"@MMK_R_zcaron" = -5;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -20;
"@MMK_R_AE" = -15;
"@MMK_R_J" = -10;
"@MMK_R_T" = -50;
"@MMK_R_W" = -30;
"@MMK_R_Yacute" = -60;
"@MMK_R_Zcaron" = -5;
"@MMK_R_a" = -10;
"@MMK_R_bracketright" = -5;
"@MMK_R_comma" = -55;
"@MMK_R_quotedbl" = -25;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -25;
"@MMK_R_quotesinglbase" = -55;
"@MMK_R_w" = -5;
"@MMK_R_zcaron" = -20;
};
"@MMK_L_R" = {
"@MMK_R_C" = -5;
"@MMK_R_T" = -15;
"@MMK_R_U" = 5;
"@MMK_R_V" = -5;
"@MMK_R_Yacute" = -20;
"@MMK_R_Zcaron" = 10;
"@MMK_R_a" = -5;
"@MMK_R_backslash" = -10;
"@MMK_R_c" = -10;
"@MMK_R_comma" = 5;
"@MMK_R_d" = -10;
"@MMK_R_g" = -10;
"@MMK_R_guillemotleft" = -25;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = -10;
"@MMK_R_hyphen.cap" = -10;
"@MMK_R_question" = 5;
"@MMK_R_quotedbl" = -5;
"@MMK_R_quotedblleft" = -5;
"@MMK_R_quotedblright" = -5;
"@MMK_R_quotesinglbase" = 5;
"@MMK_R_scaron" = -5;
"@MMK_R_trademark" = -5;
};
"@MMK_L_R.alt" = {
"@MMK_R_C" = -5;
"@MMK_R_J" = -10;
"@MMK_R_T" = -20;
"@MMK_R_V" = -15;
"@MMK_R_Yacute" = -15;
"@MMK_R_a" = -10;
"@MMK_R_ampersand" = -10;
"@MMK_R_at" = -5;
"@MMK_R_backslash" = -10;
"@MMK_R_c" = -25;
"@MMK_R_comma" = 5;
"@MMK_R_d" = -20;
"@MMK_R_g" = -20;
"@MMK_R_guillemotleft" = -40;
"@MMK_R_guillemotright" = -10;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_parenright" = -5;
"@MMK_R_periodcentered" = -25;
"@MMK_R_question" = 5;
"@MMK_R_quotedbl" = -5;
"@MMK_R_quotedblright" = -5;
"@MMK_R_quotesinglbase" = 5;
"@MMK_R_scaron" = -10;
"@MMK_R_trademark" = -5;
"@MMK_R_u" = -10;
};
"@MMK_L_Scaron" = {
"@MMK_R_A" = -10;
"@MMK_R_AE" = -5;
"@MMK_R_Scaron" = 5;
"@MMK_R_T" = -40;
"@MMK_R_U" = 5;
"@MMK_R_V" = -25;
"@MMK_R_W" = -20;
"@MMK_R_X" = -25;
"@MMK_R_Yacute" = -45;
"@MMK_R_Zcaron" = -10;
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -30;
"@MMK_R_bracketright" = -5;
"@MMK_R_comma" = -15;
"@MMK_R_f" = -5;
"@MMK_R_hyphen" = 10;
"@MMK_R_hyphen.cap" = 10;
"@MMK_R_parenright" = -5;
"@MMK_R_question" = -5;
"@MMK_R_quotedbl" = -20;
"@MMK_R_quotedblleft" = -20;
"@MMK_R_quotedblright" = -20;
"@MMK_R_quotesinglbase" = -15;
"@MMK_R_slash" = -5;
"@MMK_R_t" = -5;
"@MMK_R_trademark" = -25;
"@MMK_R_v" = -15;
"@MMK_R_w" = -15;
"@MMK_R_x" = -20;
"@MMK_R_yacute" = -10;
"@MMK_R_zcaron" = -20;
};
"@MMK_L_T" = {
"@MMK_R_A" = -85;
"@MMK_R_AE" = -90;
"@MMK_R_C" = -50;
"@MMK_R_J" = -90;
"@MMK_R_Scaron" = -20;
"@MMK_R_T" = 15;
"@MMK_R_V" = 10;
"@MMK_R_W" = 10;
"@MMK_R_Yacute" = 10;
"@MMK_R_a" = -120;
"@MMK_R_ampersand" = -55;
"@MMK_R_at" = -70;
"@MMK_R_b" = -5;
"@MMK_R_backslash" = 10;
"@MMK_R_bracketright" = 5;
"@MMK_R_c" = -120;
"@MMK_R_colon" = -90;
"@MMK_R_comma" = -95;
"@MMK_R_copyright" = -50;
"@MMK_R_d" = -105;
"@MMK_R_f" = -35;
"@MMK_R_g" = -105;
"@MMK_R_germandbls" = -25;
"@MMK_R_guillemotleft" = -130;
"@MMK_R_guillemotright" = -80;
"@MMK_R_hyphen" = -90;
"@MMK_R_hyphen.cap" = -90;
"@MMK_R_j" = -5;
"@MMK_R_m" = -80;
"@MMK_R_p" = -80;
"@MMK_R_parenright" = 5;
"@MMK_R_periodcentered" = -80;
"@MMK_R_question" = -10;
"@MMK_R_quotedbl" = 10;
"@MMK_R_quotedblleft" = 10;
"@MMK_R_quotedblright" = 10;
"@MMK_R_quotesinglbase" = -95;
"@MMK_R_registered" = -50;
"@MMK_R_scaron" = -105;
"@MMK_R_slash" = -90;
"@MMK_R_t" = -30;
"@MMK_R_u" = -85;
"@MMK_R_v" = -60;
"@MMK_R_w" = -60;
"@MMK_R_x" = -75;
"@MMK_R_yacute" = -60;
"@MMK_R_zcaron" = -85;
};
"@MMK_L_U" = {
"@MMK_R_A" = -20;
"@MMK_R_AE" = -20;
"@MMK_R_Scaron" = 5;
"@MMK_R_X" = -5;
"@MMK_R_Zcaron" = -10;
"@MMK_R_a" = -5;
"@MMK_R_bracketright" = 5;
"@MMK_R_comma" = -30;
"@MMK_R_question" = 5;
"@MMK_R_quotesinglbase" = -30;
"@MMK_R_slash" = -25;
"@MMK_R_x" = -5;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_V" = {
"@MMK_R_A" = -80;
"@MMK_R_AE" = -85;
"@MMK_R_C" = -40;
"@MMK_R_J" = -75;
"@MMK_R_Scaron" = -15;
"@MMK_R_T" = 10;
"@MMK_R_W" = 15;
"@MMK_R_Yacute" = 10;
"@MMK_R_Zcaron" = -10;
"@MMK_R_a" = -60;
"@MMK_R_bracketright" = 5;
"@MMK_R_c" = -65;
"@MMK_R_colon" = -45;
"@MMK_R_comma" = -90;
"@MMK_R_copyright" = -30;
"@MMK_R_d" = -55;
"@MMK_R_f" = -15;
"@MMK_R_g" = -55;
"@MMK_R_guillemotleft" = -75;
"@MMK_R_guillemotright" = -45;
"@MMK_R_hyphen" = -70;
"@MMK_R_hyphen.cap" = -70;
"@MMK_R_m" = -25;
"@MMK_R_quotedbl" = 10;
"@MMK_R_quotedblright" = 10;
"@MMK_R_quotesinglbase" = -90;
"@MMK_R_scaron" = -45;
"@MMK_R_t" = -15;
"@MMK_R_u" = -30;
"@MMK_R_w" = -20;
"@MMK_R_yacute" = -10;
"@MMK_R_zcaron" = -45;
};
"@MMK_L_W" = {
"@MMK_R_A" = -60;
"@MMK_R_AE" = -75;
"@MMK_R_C" = -30;
"@MMK_R_J" = -60;
"@MMK_R_Scaron" = -10;
"@MMK_R_T" = 10;
"@MMK_R_V" = 15;
"@MMK_R_W" = 10;
"@MMK_R_Yacute" = 10;
"@MMK_R_a" = -45;
"@MMK_R_ampersand" = -40;
"@MMK_R_at" = -35;
"@MMK_R_backslash" = 10;
"@MMK_R_bracketright" = 5;
"@MMK_R_c" = -50;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -70;
"@MMK_R_copyright" = -30;
"@MMK_R_d" = -50;
"@MMK_R_f" = -10;
"@MMK_R_g" = -50;
"@MMK_R_germandbls" = -10;
"@MMK_R_guillemotleft" = -65;
"@MMK_R_guillemotright" = -35;
"@MMK_R_hyphen" = -40;
"@MMK_R_hyphen.cap" = -40;
"@MMK_R_m" = -25;
"@MMK_R_p" = -25;
"@MMK_R_parenright" = 5;
"@MMK_R_periodcentered" = -30;
"@MMK_R_question" = 5;
"@MMK_R_quotedbl" = 10;
"@MMK_R_quotedblleft" = 5;
"@MMK_R_quotedblright" = 10;
"@MMK_R_quotesinglbase" = -70;
"@MMK_R_registered" = -30;
"@MMK_R_scaron" = -40;
"@MMK_R_slash" = -70;
"@MMK_R_t" = -10;
"@MMK_R_u" = -30;
"@MMK_R_v" = -10;
"@MMK_R_w" = -10;
"@MMK_R_x" = -30;
"@MMK_R_zcaron" = -35;
};
"@MMK_L_X" = {
"@MMK_R_C" = -55;
"@MMK_R_J" = -10;
"@MMK_R_Scaron" = -25;
"@MMK_R_U" = -5;
"@MMK_R_a" = -10;
"@MMK_R_c" = -35;
"@MMK_R_copyright" = -45;
"@MMK_R_d" = -30;
"@MMK_R_f" = -10;
"@MMK_R_g" = -30;
"@MMK_R_guillemotleft" = -60;
"@MMK_R_guillemotright" = -30;
"@MMK_R_hyphen" = -55;
"@MMK_R_hyphen.cap" = -55;
"@MMK_R_quotedbl" = -5;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quotedblright" = -5;
"@MMK_R_scaron" = -20;
"@MMK_R_t" = -20;
"@MMK_R_u" = -20;
"@MMK_R_w" = -35;
};
"@MMK_L_Yacute" = {
"@MMK_R_A" = -80;
"@MMK_R_AE" = -95;
"@MMK_R_C" = -60;
"@MMK_R_J" = -100;
"@MMK_R_Scaron" = -35;
"@MMK_R_T" = 10;
"@MMK_R_V" = 10;
"@MMK_R_W" = 10;
"@MMK_R_Yacute" = 10;
"@MMK_R_Zcaron" = -10;
"@MMK_R_a" = -95;
"@MMK_R_ampersand" = -70;
"@MMK_R_asterisk" = -15;
"@MMK_R_at" = -80;
"@MMK_R_b" = -10;
"@MMK_R_backslash" = 10;
"@MMK_R_bracketright" = 5;
"@MMK_R_c" = -110;
"@MMK_R_colon" = -70;
"@MMK_R_comma" = -105;
"@MMK_R_copyright" = -60;
"@MMK_R_d" = -95;
"@MMK_R_f" = -35;
"@MMK_R_g" = -95;
"@MMK_R_germandbls" = -35;
"@MMK_R_guillemotleft" = -115;
"@MMK_R_guillemotright" = -80;
"@MMK_R_hyphen" = -105;
"@MMK_R_hyphen.cap" = -105;
"@MMK_R_j" = -10;
"@MMK_R_m" = -50;
"@MMK_R_p" = -50;
"@MMK_R_parenright" = 5;
"@MMK_R_periodcentered" = -75;
"@MMK_R_question" = -15;
"@MMK_R_quotedbl" = 10;
"@MMK_R_quotedblleft" = -5;
"@MMK_R_quotedblright" = 10;
"@MMK_R_quotesinglbase" = -105;
"@MMK_R_registered" = -60;
"@MMK_R_scaron" = -90;
"@MMK_R_slash" = -100;
"@MMK_R_t" = -35;
"@MMK_R_trademark" = 10;
"@MMK_R_u" = -55;
"@MMK_R_v" = -50;
"@MMK_R_w" = -50;
"@MMK_R_x" = -60;
"@MMK_R_yacute" = -45;
"@MMK_R_zcaron" = -65;
};
"@MMK_L_Zcaron" = {
"@MMK_R_C" = -50;
"@MMK_R_Scaron" = -15;
"@MMK_R_U" = -10;
"@MMK_R_V" = -10;
"@MMK_R_Yacute" = -10;
"@MMK_R_a" = -10;
"@MMK_R_ampersand" = -25;
"@MMK_R_asterisk" = -10;
"@MMK_R_at" = -25;
"@MMK_R_backslash" = -10;
"@MMK_R_c" = -35;
"@MMK_R_colon" = 10;
"@MMK_R_comma" = 10;
"@MMK_R_copyright" = -40;
"@MMK_R_d" = -30;
"@MMK_R_f" = -20;
"@MMK_R_g" = -30;
"@MMK_R_germandbls" = -10;
"@MMK_R_guillemotleft" = -50;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = -45;
"@MMK_R_hyphen.cap" = -45;
"@MMK_R_periodcentered" = -30;
"@MMK_R_question" = -15;
"@MMK_R_quotesinglbase" = 10;
"@MMK_R_registered" = -40;
"@MMK_R_scaron" = -10;
"@MMK_R_t" = -25;
"@MMK_R_u" = -20;
"@MMK_R_v" = -30;
"@MMK_R_w" = -30;
"@MMK_R_yacute" = -35;
"@MMK_R_zcaron" = -5;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -45;
"@MMK_R_backslash" = -85;
"@MMK_R_bracketright" = -10;
"@MMK_R_c" = -5;
"@MMK_R_colon" = 10;
"@MMK_R_comma" = 15;
"@MMK_R_d" = -5;
"@MMK_R_f" = -10;
"@MMK_R_g" = -5;
"@MMK_R_guillemotleft" = -5;
"@MMK_R_guillemotright" = -5;
"@MMK_R_parenright" = -5;
"@MMK_R_question" = -25;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedblleft" = -45;
"@MMK_R_quotedblright" = -40;
"@MMK_R_quotesinglbase" = 15;
"@MMK_R_scaron" = -5;
"@MMK_R_slash" = 15;
"@MMK_R_t" = -15;
"@MMK_R_trademark" = -60;
"@MMK_R_v" = -20;
"@MMK_R_w" = -20;
"@MMK_R_yacute" = -20;
};
"@MMK_L_a.alt" = {
"@MMK_R_asterisk" = -35;
"@MMK_R_backslash" = -70;
"@MMK_R_f" = -5;
"@MMK_R_question" = -10;
"@MMK_R_quotedbl" = -30;
"@MMK_R_quotedblleft" = -35;
"@MMK_R_quotedblright" = -30;
"@MMK_R_t" = -10;
"@MMK_R_trademark" = -45;
"@MMK_R_v" = -10;
"@MMK_R_w" = -10;
"@MMK_R_yacute" = -10;
};
"@MMK_L_ampersand" = {
"@MMK_R_A" = 15;
"@MMK_R_C" = -5;
"@MMK_R_J" = 5;
"@MMK_R_Scaron" = -5;
"@MMK_R_T" = -75;
"@MMK_R_U" = -5;
"@MMK_R_W" = -45;
"@MMK_R_Yacute" = -90;
"@MMK_R_Zcaron" = 15;
"@MMK_R_c" = -5;
"@MMK_R_d" = -5;
"@MMK_R_f" = -10;
"@MMK_R_g" = -5;
"@MMK_R_j" = 20;
"@MMK_R_scaron" = -5;
"@MMK_R_t" = -15;
"@MMK_R_u" = -5;
"@MMK_R_w" = -35;
"@MMK_R_yacute" = -30;
"@MMK_R_zcaron" = 10;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -100;
"@MMK_R_AE" = -110;
"@MMK_R_C" = -20;
"@MMK_R_J" = -120;
"@MMK_R_Scaron" = -10;
"@MMK_R_Yacute" = -15;
"@MMK_R_Zcaron" = -20;
"@MMK_R_a" = -45;
"@MMK_R_c" = -45;
"@MMK_R_d" = -45;
"@MMK_R_g" = -45;
"@MMK_R_m" = -5;
"@MMK_R_scaron" = -35;
"@MMK_R_u" = -5;
"@MMK_R_w" = 15;
"@MMK_R_yacute" = 15;
"@MMK_R_zcaron" = -25;
};
"@MMK_L_at" = {
"@MMK_R_A" = -35;
"@MMK_R_AE" = -40;
"@MMK_R_J" = -5;
"@MMK_R_T" = -70;
"@MMK_R_W" = -30;
"@MMK_R_Yacute" = -80;
"@MMK_R_Zcaron" = -25;
"@MMK_R_a" = -5;
"@MMK_R_d" = 5;
"@MMK_R_g" = 5;
"@MMK_R_scaron" = -5;
"@MMK_R_yacute" = -5;
"@MMK_R_zcaron" = -20;
};
"@MMK_L_backslash" = {
"@MMK_R_A" = 10;
"@MMK_R_C" = -45;
"@MMK_R_Scaron" = -5;
"@MMK_R_T" = -90;
"@MMK_R_U" = -25;
"@MMK_R_W" = -70;
"@MMK_R_Yacute" = -100;
"@MMK_R_c" = -15;
"@MMK_R_d" = -15;
"@MMK_R_f" = -25;
"@MMK_R_g" = -15;
"@MMK_R_scaron" = -5;
"@MMK_R_t" = -35;
"@MMK_R_u" = -15;
"@MMK_R_w" = -35;
"@MMK_R_yacute" = -35;
"@MMK_R_zcaron" = 5;
};
"@MMK_L_bracketleft" = {
"@MMK_R_A" = -5;
"@MMK_R_C" = -5;
"@MMK_R_J" = -10;
"@MMK_R_T" = 5;
"@MMK_R_U" = 5;
"@MMK_R_V" = 5;
"@MMK_R_W" = 5;
"@MMK_R_Yacute" = 5;
"@MMK_R_c" = -15;
"@MMK_R_d" = -10;
"@MMK_R_eight" = -5;
"@MMK_R_eight.cap" = -5;
"@MMK_R_f" = -5;
"@MMK_R_four" = -15;
"@MMK_R_four.cap" = -15;
"@MMK_R_g" = -10;
"@MMK_R_j" = 40;
"@MMK_R_one" = -5;
"@MMK_R_one.cap" = -5;
"@MMK_R_scaron" = -5;
"@MMK_R_seven" = 10;
"@MMK_R_seven.cap" = 10;
"@MMK_R_t" = -10;
"@MMK_R_v" = -15;
"@MMK_R_w" = -15;
"@MMK_R_yacute" = -5;
};
"@MMK_L_c" = {
"@MMK_R_A" = -10;
"@MMK_R_C" = 5;
"@MMK_R_J" = 10;
"@MMK_R_Scaron" = 5;
"@MMK_R_T" = -95;
"@MMK_R_V" = -50;
"@MMK_R_W" = -30;
"@MMK_R_X" = -15;
"@MMK_R_Yacute" = -80;
"@MMK_R_a" = 10;
"@MMK_R_ampersand" = 5;
"@MMK_R_asterisk" = -20;
"@MMK_R_at" = 10;
"@MMK_R_backslash" = -70;
"@MMK_R_f" = -5;
"@MMK_R_question" = -15;
"@MMK_R_quotedbl" = -25;
"@MMK_R_quotedblleft" = -20;
"@MMK_R_quotedblright" = -25;
"@MMK_R_scaron" = 10;
"@MMK_R_slash" = 5;
"@MMK_R_trademark" = -30;
"@MMK_R_x" = -15;
"@MMK_R_zcaron" = -10;
};
"@MMK_L_colon" = {
"@MMK_R_A" = 10;
"@MMK_R_T" = -90;
"@MMK_R_V" = -45;
"@MMK_R_W" = -30;
"@MMK_R_Yacute" = -70;
"@MMK_R_Zcaron" = 10;
"@MMK_R_f" = -5;
"@MMK_R_five" = 5;
"@MMK_R_five.cap" = 5;
"@MMK_R_j" = 20;
"@MMK_R_one" = -35;
"@MMK_R_one.cap" = -35;
"@MMK_R_seven" = -20;
"@MMK_R_seven.cap" = -20;
"@MMK_R_six" = 5;
"@MMK_R_six.cap" = 5;
"@MMK_R_t" = -10;
"@MMK_R_two" = 5;
"@MMK_R_two.cap" = 5;
"@MMK_R_v" = -15;
"@MMK_R_w" = -15;
"@MMK_R_yacute" = -10;
};
"@MMK_L_comma" = {
"@MMK_R_A" = 15;
"@MMK_R_AE" = 10;
"@MMK_R_C" = -55;
"@MMK_R_J" = 10;
"@MMK_R_Scaron" = -20;
"@MMK_R_T" = -95;
"@MMK_R_U" = -30;
"@MMK_R_V" = -90;
"@MMK_R_W" = -70;
"@MMK_R_Yacute" = -105;
"@MMK_R_Zcaron" = 10;
"@MMK_R_c" = -25;
"@MMK_R_d" = -25;
"@MMK_R_f" = -25;
"@MMK_R_four" = -30;
"@MMK_R_four.cap" = -30;
"@MMK_R_g" = -25;
"@MMK_R_j" = 10;
"@MMK_R_nine" = -15;
"@MMK_R_nine.cap" = -15;
"@MMK_R_one" = -90;
"@MMK_R_one.cap" = -90;
"@MMK_R_seven" = -20;
"@MMK_R_seven.cap" = -20;
"@MMK_R_six" = -30;
"@MMK_R_six.cap" = -30;
"@MMK_R_t" = -40;
"@MMK_R_two" = 10;
"@MMK_R_two.cap" = 10;
"@MMK_R_u" = -20;
"@MMK_R_v" = -65;
"@MMK_R_w" = -65;
"@MMK_R_yacute" = -55;
"@MMK_R_zcaron" = 10;
"@MMK_R_zero" = -25;
"@MMK_R_zero.cap" = -25;
};
"@MMK_L_copyright" = {
"@MMK_R_A" = -35;
"@MMK_R_AE" = -35;
"@MMK_R_T" = -50;
"@MMK_R_V" = -30;
"@MMK_R_W" = -30;
"@MMK_R_X" = -45;
"@MMK_R_Yacute" = -60;
"@MMK_R_Zcaron" = -35;
"@MMK_R_a" = -5;
"@MMK_R_eight" = -10;
"@MMK_R_eight.cap" = -10;
"@MMK_R_nine" = -10;
"@MMK_R_nine.cap" = -10;
"@MMK_R_one" = -10;
"@MMK_R_one.cap" = -10;
"@MMK_R_seven" = -30;
"@MMK_R_seven.cap" = -30;
"@MMK_R_two" = -10;
"@MMK_R_two.cap" = -10;
"@MMK_R_x" = -20;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_d" = {
"@MMK_R_question" = 5;
};
"@MMK_L_e" = {
"@MMK_R_asterisk" = -45;
"@MMK_R_at" = 5;
"@MMK_R_backslash" = -75;
"@MMK_R_comma" = -10;
"@MMK_R_f" = -10;
"@MMK_R_question" = -30;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedblleft" = -45;
"@MMK_R_quotedblright" = -40;
"@MMK_R_quotesinglbase" = -10;
"@MMK_R_slash" = -5;
"@MMK_R_t" = -15;
"@MMK_R_trademark" = -50;
"@MMK_R_v" = -15;
"@MMK_R_w" = -15;
"@MMK_R_x" = -30;
"@MMK_R_yacute" = -15;
"@MMK_R_zcaron" = -25;
};
"@MMK_L_eight" = {
"@MMK_R_bracketright" = -5;
"@MMK_R_copyright" = -10;
"@MMK_R_guillemotleft" = -10;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = 5;
"@MMK_R_hyphen.cap" = 5;
"@MMK_R_minus" = -5;
"@MMK_R_percent" = -5;
"@MMK_R_quotedbl" = -15;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -15;
};
"@MMK_L_eight.cap" = {
"@MMK_R_bracketright" = -5;
"@MMK_R_copyright" = -10;
"@MMK_R_guillemotleft" = -10;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = 5;
"@MMK_R_hyphen.cap" = 5;
"@MMK_R_minus" = -5;
"@MMK_R_percent.cap" = -5;
"@MMK_R_quotedbl" = -15;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -15;
};
"@MMK_L_exclamdown" = {
"@MMK_R_T" = -25;
"@MMK_R_W" = -15;
"@MMK_R_Yacute" = -30;
};
"@MMK_L_f" = {
"@MMK_R_a" = -20;
"@MMK_R_ampersand" = -35;
"@MMK_R_asterisk" = 10;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -25;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -45;
"@MMK_R_d" = -25;
"@MMK_R_f" = -10;
"@MMK_R_g" = -25;
"@MMK_R_guillemotleft" = -40;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_parenright" = 10;
"@MMK_R_periodcentered" = -25;
"@MMK_R_question" = 15;
"@MMK_R_quotedbl" = 15;
"@MMK_R_quotedblleft" = 10;
"@MMK_R_quotedblright" = 15;
"@MMK_R_quotesinglbase" = -45;
"@MMK_R_scaron" = -10;
"@MMK_R_slash" = -45;
"@MMK_R_t" = -10;
"@MMK_R_trademark" = 20;
"@MMK_R_v" = 10;
"@MMK_R_w" = 10;
"@MMK_R_x" = -5;
"@MMK_R_yacute" = 10;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_five" = {
"@MMK_R_colon" = 5;
"@MMK_R_percent" = -10;
"@MMK_R_quotedbl" = -10;
"@MMK_R_quotedblleft" = -20;
"@MMK_R_quotedblright" = -10;
};
"@MMK_L_five.cap" = {
"@MMK_R_colon" = 5;
"@MMK_R_percent.cap" = -10;
"@MMK_R_quotedbl" = -10;
"@MMK_R_quotedblleft" = -20;
"@MMK_R_quotedblright" = -10;
};
"@MMK_L_four" = {
"@MMK_R_guillemotleft" = -5;
"@MMK_R_minus" = -10;
"@MMK_R_percent" = -30;
"@MMK_R_quotedbl" = -25;
"@MMK_R_quotedblleft" = -35;
"@MMK_R_quotedblright" = -25;
};
"@MMK_L_four.cap" = {
"@MMK_R_guillemotleft" = -5;
"@MMK_R_minus" = -10;
"@MMK_R_percent.cap" = -30;
"@MMK_R_quotedbl" = -25;
"@MMK_R_quotedblleft" = -35;
"@MMK_R_quotedblright" = -25;
};
"@MMK_L_g" = {
"@MMK_R_asterisk" = -5;
"@MMK_R_backslash" = -65;
"@MMK_R_j" = 15;
"@MMK_R_trademark" = -30;
};
"@MMK_L_germandbls" = {
"@MMK_R_bracketright" = -5;
"@MMK_R_c" = 10;
"@MMK_R_f" = -5;
"@MMK_R_hyphen" = 10;
"@MMK_R_hyphen.cap" = 10;
"@MMK_R_quotedbl" = -20;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quotedblright" = -20;
"@MMK_R_t" = -15;
"@MMK_R_w" = -10;
"@MMK_R_yacute" = -5;
"@MMK_R_zcaron" = -10;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_A" = -10;
"@MMK_R_T" = -90;
"@MMK_R_V" = -45;
"@MMK_R_W" = -35;
"@MMK_R_X" = -30;
"@MMK_R_Yacute" = -80;
"@MMK_R_eight" = -5;
"@MMK_R_eight.cap" = -5;
"@MMK_R_f" = -5;
"@MMK_R_one" = -35;
"@MMK_R_one.cap" = -35;
"@MMK_R_seven" = -35;
"@MMK_R_seven.cap" = -35;
"@MMK_R_t" = -5;
"@MMK_R_two" = -10;
"@MMK_R_two.cap" = -10;
"@MMK_R_v" = -5;
"@MMK_R_w" = -5;
"@MMK_R_x" = -15;
"@MMK_R_yacute" = -10;
};
"@MMK_L_guillemotright" = {
"@MMK_R_A" = -35;
"@MMK_R_AE" = -30;
"@MMK_R_T" = -130;
"@MMK_R_V" = -75;
"@MMK_R_W" = -65;
"@MMK_R_X" = -60;
"@MMK_R_Yacute" = -115;
"@MMK_R_Zcaron" = -20;
"@MMK_R_a" = -5;
"@MMK_R_eight" = -10;
"@MMK_R_eight.cap" = -10;
"@MMK_R_f" = -20;
"@MMK_R_nine" = -20;
"@MMK_R_nine.cap" = -20;
"@MMK_R_one" = -70;
"@MMK_R_one.cap" = -70;
"@MMK_R_scaron" = -10;
"@MMK_R_seven" = -45;
"@MMK_R_seven.cap" = -45;
"@MMK_R_t" = -20;
"@MMK_R_two" = -25;
"@MMK_R_two.cap" = -25;
"@MMK_R_v" = -35;
"@MMK_R_w" = -35;
"@MMK_R_x" = -50;
"@MMK_R_yacute" = -30;
"@MMK_R_zcaron" = -25;
};
"@MMK_L_h" = {
"@MMK_R_asterisk" = -30;
"@MMK_R_backslash" = -70;
"@MMK_R_f" = -5;
"@MMK_R_question" = -20;
"@MMK_R_quotedbl" = -30;
"@MMK_R_quotedblleft" = -25;
"@MMK_R_quotedblright" = -30;
"@MMK_R_t" = -10;
"@MMK_R_trademark" = -45;
"@MMK_R_v" = -10;
"@MMK_R_w" = -10;
"@MMK_R_yacute" = -10;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -25;
"@MMK_R_AE" = -15;
"@MMK_R_Scaron" = 10;
"@MMK_R_T" = -90;
"@MMK_R_V" = -70;
"@MMK_R_W" = -40;
"@MMK_R_X" = -55;
"@MMK_R_Yacute" = -105;
"@MMK_R_Zcaron" = -10;
"@MMK_R_eight" = 5;
"@MMK_R_eight.cap" = 5;
"@MMK_R_f" = -5;
"@MMK_R_nine" = -15;
"@MMK_R_nine.cap" = -15;
"@MMK_R_one" = -80;
"@MMK_R_one.cap" = -80;
"@MMK_R_seven" = -40;
"@MMK_R_seven.cap" = -40;
"@MMK_R_two" = -5;
"@MMK_R_two.cap" = -5;
"@MMK_R_v" = -25;
"@MMK_R_w" = -25;
"@MMK_R_x" = -45;
"@MMK_R_yacute" = -25;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_hyphen.cap" = {
"@MMK_R_A" = -25;
"@MMK_R_AE" = -15;
"@MMK_R_Scaron" = 10;
"@MMK_R_T" = -90;
"@MMK_R_V" = -70;
"@MMK_R_W" = -40;
"@MMK_R_X" = -55;
"@MMK_R_Yacute" = -105;
"@MMK_R_Zcaron" = -10;
"@MMK_R_eight" = 5;
"@MMK_R_eight.cap" = 5;
"@MMK_R_f" = -5;
"@MMK_R_nine" = -15;
"@MMK_R_nine.cap" = -15;
"@MMK_R_one" = -80;
"@MMK_R_one.cap" = -80;
"@MMK_R_seven" = -40;
"@MMK_R_seven.cap" = -40;
"@MMK_R_two" = -5;
"@MMK_R_two.cap" = -5;
"@MMK_R_v" = -25;
"@MMK_R_w" = -25;
"@MMK_R_x" = -45;
"@MMK_R_yacute" = -25;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_j" = {
"@MMK_R_j" = 15;
};
"@MMK_L_k" = {
"@MMK_R_a" = -15;
"@MMK_R_ampersand" = -20;
"@MMK_R_asterisk" = -5;
"@MMK_R_at" = -15;
"@MMK_R_backslash" = -40;
"@MMK_R_c" = -35;
"@MMK_R_comma" = 10;
"@MMK_R_copyright" = -10;
"@MMK_R_d" = -35;
"@MMK_R_f" = -5;
"@MMK_R_g" = -35;
"@MMK_R_guillemotleft" = -55;
"@MMK_R_guillemotright" = -15;
"@MMK_R_hyphen" = -50;
"@MMK_R_hyphen.cap" = -50;
"@MMK_R_periodcentered" = -40;
"@MMK_R_question" = 5;
"@MMK_R_quotedbl" = -10;
"@MMK_R_quotedblleft" = -5;
"@MMK_R_quotedblright" = -10;
"@MMK_R_quotesinglbase" = 10;
"@MMK_R_registered" = -10;
"@MMK_R_scaron" = -20;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -10;
"@MMK_R_trademark" = -30;
"@MMK_R_u" = -20;
"@MMK_R_v" = -5;
"@MMK_R_w" = -5;
"@MMK_R_yacute" = -5;
};
"@MMK_L_minus" = {
"@MMK_R_eight" = -5;
"@MMK_R_eight.cap" = -5;
"@MMK_R_nine" = -10;
"@MMK_R_nine.cap" = -10;
"@MMK_R_one" = -30;
"@MMK_R_one.cap" = -30;
"@MMK_R_seven" = -25;
"@MMK_R_seven.cap" = -25;
"@MMK_R_three" = -5;
"@MMK_R_three.cap" = -5;
"@MMK_R_two" = -15;
"@MMK_R_two.cap" = -15;
};
"@MMK_L_nine" = {
"@MMK_R_colon" = 5;
"@MMK_R_comma" = -20;
"@MMK_R_quotedbl" = -10;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quotedblright" = -10;
"@MMK_R_quotesinglbase" = -20;
};
"@MMK_L_nine.cap" = {
"@MMK_R_colon" = 5;
"@MMK_R_comma" = -20;
"@MMK_R_quotedbl" = -10;
"@MMK_R_quotedblleft" = -15;
"@MMK_R_quotedblright" = -10;
"@MMK_R_quotesinglbase" = -20;
};
"@MMK_L_o" = {
"@MMK_R_a" = -5;
"@MMK_R_asterisk" = -45;
"@MMK_R_at" = 5;
"@MMK_R_backslash" = -85;
"@MMK_R_bracketright" = -15;
"@MMK_R_comma" = -25;
"@MMK_R_f" = -15;
"@MMK_R_parenright" = -10;
"@MMK_R_question" = -35;
"@MMK_R_quotedbl" = -50;
"@MMK_R_quotedblleft" = -50;
"@MMK_R_quotedblright" = -50;
"@MMK_R_quotesinglbase" = -25;
"@MMK_R_slash" = -15;
"@MMK_R_t" = -15;
"@MMK_R_trademark" = -75;
"@MMK_R_v" = -15;
"@MMK_R_w" = -15;
"@MMK_R_x" = -35;
"@MMK_R_yacute" = -15;
"@MMK_R_zcaron" = -25;
};
"@MMK_L_one" = {
"@MMK_R_bracketright" = 10;
};
"@MMK_L_one.cap" = {
"@MMK_R_bracketright" = 10;
};
"@MMK_L_parenleft" = {
"@MMK_R_J" = -15;
"@MMK_R_Scaron" = -10;
"@MMK_R_T" = 5;
"@MMK_R_W" = 5;
"@MMK_R_Yacute" = 5;
"@MMK_R_a" = -10;
"@MMK_R_c" = -10;
"@MMK_R_d" = -10;
"@MMK_R_f" = -5;
"@MMK_R_g" = -10;
"@MMK_R_j" = 40;
"@MMK_R_scaron" = -15;
"@MMK_R_t" = -15;
"@MMK_R_u" = -10;
"@MMK_R_w" = -20;
"@MMK_R_yacute" = -5;
};
"@MMK_L_periodcentered" = {
"@MMK_R_A" = -30;
"@MMK_R_AE" = -25;
"@MMK_R_T" = -80;
"@MMK_R_W" = -30;
"@MMK_R_Yacute" = -75;
"@MMK_R_Zcaron" = -10;
"@MMK_R_f" = -5;
"@MMK_R_w" = -15;
"@MMK_R_yacute" = -15;
"@MMK_R_zcaron" = -10;
};
"@MMK_L_q" = {
"@MMK_R_j" = 20;
};
"@MMK_L_questiondown" = {
"@MMK_R_A" = 10;
"@MMK_R_C" = -25;
"@MMK_R_J" = 5;
"@MMK_R_Scaron" = -5;
"@MMK_R_T" = -95;
"@MMK_R_U" = -20;
"@MMK_R_W" = -75;
"@MMK_R_Yacute" = -120;
"@MMK_R_Zcaron" = 5;
"@MMK_R_a" = 5;
"@MMK_R_c" = -15;
"@MMK_R_d" = -15;
"@MMK_R_f" = -20;
"@MMK_R_g" = -5;
"@MMK_R_j" = 15;
"@MMK_R_scaron" = -5;
"@MMK_R_t" = -30;
"@MMK_R_u" = -10;
"@MMK_R_w" = -65;
"@MMK_R_yacute" = -30;
};
"@MMK_L_quotedbl" = {
"@MMK_R_eight" = -10;
"@MMK_R_eight.cap" = -10;
"@MMK_R_five" = 5;
"@MMK_R_five.cap" = 5;
"@MMK_R_four" = -60;
"@MMK_R_four.cap" = -60;
"@MMK_R_one" = 15;
"@MMK_R_one.cap" = 15;
"@MMK_R_seven" = 10;
"@MMK_R_seven.cap" = 10;
"@MMK_R_three" = 10;
"@MMK_R_three.cap" = 10;
};
"@MMK_L_quotedblleft" = {
"@MMK_R_A" = -80;
"@MMK_R_AE" = -95;
"@MMK_R_C" = -15;
"@MMK_R_J" = -105;
"@MMK_R_Scaron" = -10;
"@MMK_R_T" = 10;
"@MMK_R_V" = 10;
"@MMK_R_W" = 10;
"@MMK_R_X" = -10;
"@MMK_R_Yacute" = 10;
"@MMK_R_Zcaron" = -5;
"@MMK_R_a" = -45;
"@MMK_R_c" = -50;
"@MMK_R_d" = -60;
"@MMK_R_eight" = -15;
"@MMK_R_eight.cap" = -15;
"@MMK_R_five" = -10;
"@MMK_R_five.cap" = -10;
"@MMK_R_four" = -90;
"@MMK_R_four.cap" = -90;
"@MMK_R_g" = -60;
"@MMK_R_germandbls" = -5;
"@MMK_R_one" = 20;
"@MMK_R_one.cap" = 20;
"@MMK_R_scaron" = -35;
"@MMK_R_seven" = 10;
"@MMK_R_seven.cap" = 10;
"@MMK_R_six" = -15;
"@MMK_R_six.cap" = -15;
"@MMK_R_t" = 5;
"@MMK_R_v" = 20;
"@MMK_R_w" = 20;
"@MMK_R_yacute" = 20;
"@MMK_R_zero" = -20;
"@MMK_R_zero.cap" = -20;
};
"@MMK_L_quotedblright" = {
"@MMK_R_A" = -95;
"@MMK_R_AE" = -105;
"@MMK_R_C" = -35;
"@MMK_R_J" = -105;
"@MMK_R_Scaron" = -20;
"@MMK_R_T" = 10;
"@MMK_R_V" = 10;
"@MMK_R_W" = 10;
"@MMK_R_X" = -10;
"@MMK_R_Yacute" = 10;
"@MMK_R_Zcaron" = -5;
"@MMK_R_a" = -70;
"@MMK_R_c" = -65;
"@MMK_R_d" = -90;
"@MMK_R_eight" = -25;
"@MMK_R_eight.cap" = -25;
"@MMK_R_f" = -10;
"@MMK_R_five" = -15;
"@MMK_R_five.cap" = -15;
"@MMK_R_four" = -105;
"@MMK_R_four.cap" = -105;
"@MMK_R_g" = -90;
"@MMK_R_germandbls" = -10;
"@MMK_R_m" = -5;
"@MMK_R_nine" = -10;
"@MMK_R_nine.cap" = -10;
"@MMK_R_one" = 5;
"@MMK_R_one.cap" = 5;
"@MMK_R_p" = -5;
"@MMK_R_scaron" = -55;
"@MMK_R_seven" = 15;
"@MMK_R_seven.cap" = 15;
"@MMK_R_six" = -30;
"@MMK_R_six.cap" = -30;
"@MMK_R_t" = -10;
"@MMK_R_three" = -10;
"@MMK_R_three.cap" = -10;
"@MMK_R_two" = -15;
"@MMK_R_two.cap" = -15;
"@MMK_R_u" = -10;
"@MMK_R_x" = -15;
"@MMK_R_yacute" = 10;
"@MMK_R_zcaron" = -20;
"@MMK_R_zero" = -25;
"@MMK_R_zero.cap" = -25;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 15;
"@MMK_R_AE" = 10;
"@MMK_R_C" = -55;
"@MMK_R_J" = 10;
"@MMK_R_Scaron" = -20;
"@MMK_R_T" = -95;
"@MMK_R_U" = -30;
"@MMK_R_V" = -90;
"@MMK_R_W" = -70;
"@MMK_R_Yacute" = -105;
"@MMK_R_Zcaron" = 10;
"@MMK_R_c" = -25;
"@MMK_R_d" = -25;
"@MMK_R_f" = -25;
"@MMK_R_four" = -30;
"@MMK_R_four.cap" = -30;
"@MMK_R_g" = -25;
"@MMK_R_j" = 25;
"@MMK_R_nine" = -15;
"@MMK_R_nine.cap" = -15;
"@MMK_R_one" = -90;
"@MMK_R_one.cap" = -90;
"@MMK_R_seven" = -20;
"@MMK_R_seven.cap" = -20;
"@MMK_R_six" = -30;
"@MMK_R_six.cap" = -30;
"@MMK_R_t" = -40;
"@MMK_R_two" = 10;
"@MMK_R_two.cap" = 10;
"@MMK_R_u" = -20;
"@MMK_R_v" = -65;
"@MMK_R_w" = -65;
"@MMK_R_yacute" = -40;
"@MMK_R_zcaron" = 10;
"@MMK_R_zero" = -25;
"@MMK_R_zero.cap" = -25;
};
"@MMK_L_r" = {
"@MMK_R_a" = -25;
"@MMK_R_ampersand" = -35;
"@MMK_R_asterisk" = 20;
"@MMK_R_at" = -5;
"@MMK_R_backslash" = -30;
"@MMK_R_bracketright" = -5;
"@MMK_R_c" = -25;
"@MMK_R_colon" = -5;
"@MMK_R_comma" = -70;
"@MMK_R_copyright" = 15;
"@MMK_R_d" = -25;
"@MMK_R_f" = 5;
"@MMK_R_g" = -25;
"@MMK_R_guillemotleft" = -30;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_parenright" = -15;
"@MMK_R_periodcentered" = -15;
"@MMK_R_question" = 15;
"@MMK_R_quotedbl" = 15;
"@MMK_R_quotedblleft" = 15;
"@MMK_R_quotedblright" = 15;
"@MMK_R_quotesinglbase" = -70;
"@MMK_R_registered" = 15;
"@MMK_R_scaron" = -5;
"@MMK_R_slash" = -55;
"@MMK_R_t" = 5;
"@MMK_R_v" = 5;
"@MMK_R_w" = 5;
"@MMK_R_yacute" = 5;
"@MMK_R_zcaron" = -5;
};
"@MMK_L_scaron" = {
"@MMK_R_a" = 5;
"@MMK_R_asterisk" = -40;
"@MMK_R_backslash" = -85;
"@MMK_R_bracketright" = -5;
"@MMK_R_c" = 5;
"@MMK_R_d" = 5;
"@MMK_R_f" = -15;
"@MMK_R_g" = 5;
"@MMK_R_guillemotleft" = -10;
"@MMK_R_hyphen" = 5;
"@MMK_R_hyphen.cap" = 5;
"@MMK_R_parenright" = -5;
"@MMK_R_question" = -20;
"@MMK_R_quotedbl" = -35;
"@MMK_R_quotedblleft" = -35;
"@MMK_R_quotedblright" = -35;
"@MMK_R_t" = -15;
"@MMK_R_trademark" = -35;
"@MMK_R_v" = -10;
"@MMK_R_w" = -10;
"@MMK_R_x" = -15;
"@MMK_R_yacute" = -10;
"@MMK_R_zcaron" = -10;
};
"@MMK_L_seven" = {
"@MMK_R_bracketright" = 5;
"@MMK_R_colon" = -35;
"@MMK_R_comma" = -65;
"@MMK_R_copyright" = -20;
"@MMK_R_guillemotleft" = -85;
"@MMK_R_guillemotright" = -40;
"@MMK_R_hyphen" = -65;
"@MMK_R_hyphen.cap" = -65;
"@MMK_R_minus" = -20;
"@MMK_R_percent" = 10;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quotedblleft" = 15;
"@MMK_R_quotedblright" = 20;
"@MMK_R_quotesinglbase" = -65;
};
"@MMK_L_seven.cap" = {
"@MMK_R_bracketright" = 5;
"@MMK_R_colon" = -35;
"@MMK_R_comma" = -65;
"@MMK_R_copyright" = -20;
"@MMK_R_guillemotleft" = -85;
"@MMK_R_guillemotright" = -40;
"@MMK_R_hyphen" = -65;
"@MMK_R_hyphen.cap" = -65;
"@MMK_R_minus" = -20;
"@MMK_R_percent.cap" = 10;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quotedblleft" = 15;
"@MMK_R_quotedblright" = 20;
"@MMK_R_quotesinglbase" = -65;
};
"@MMK_L_six" = {
"@MMK_R_colon" = 5;
"@MMK_R_comma" = -10;
"@MMK_R_quotedbl" = -5;
"@MMK_R_quotedblleft" = -5;
"@MMK_R_quotedblright" = -5;
"@MMK_R_quotesinglbase" = -10;
};
"@MMK_L_six.cap" = {
"@MMK_R_colon" = 5;
"@MMK_R_comma" = -10;
"@MMK_R_quotedbl" = -5;
"@MMK_R_quotedblleft" = -5;
"@MMK_R_quotedblright" = -5;
"@MMK_R_quotesinglbase" = -10;
};
"@MMK_L_slash" = {
"@MMK_R_A" = -90;
"@MMK_R_AE" = -85;
"@MMK_R_C" = -45;
"@MMK_R_J" = -110;
"@MMK_R_Scaron" = -15;
"@MMK_R_T" = 10;
"@MMK_R_W" = 10;
"@MMK_R_Yacute" = 10;
"@MMK_R_Zcaron" = -10;
"@MMK_R_a" = -85;
"@MMK_R_c" = -85;
"@MMK_R_d" = -80;
"@MMK_R_f" = -25;
"@MMK_R_g" = -80;
"@MMK_R_m" = -55;
"@MMK_R_scaron" = -80;
"@MMK_R_t" = -30;
"@MMK_R_u" = -55;
"@MMK_R_w" = -40;
"@MMK_R_yacute" = -30;
"@MMK_R_zcaron" = -75;
};
"@MMK_L_t" = {
"@MMK_R_a" = -5;
"@MMK_R_ampersand" = -5;
"@MMK_R_asterisk" = -5;
"@MMK_R_backslash" = -35;
"@MMK_R_bracketright" = -5;
"@MMK_R_c" = -10;
"@MMK_R_comma" = 5;
"@MMK_R_copyright" = 5;
"@MMK_R_d" = -10;
"@MMK_R_f" = -20;
"@MMK_R_g" = -10;
"@MMK_R_guillemotleft" = -30;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = -15;
"@MMK_R_hyphen.cap" = -15;
"@MMK_R_parenright" = -5;
"@MMK_R_periodcentered" = -10;
"@MMK_R_question" = 5;
"@MMK_R_quotedbl" = -5;
"@MMK_R_quotedblleft" = -10;
"@MMK_R_quotedblright" = -5;
"@MMK_R_quotesinglbase" = 5;
"@MMK_R_registered" = 5;
"@MMK_R_scaron" = -5;
"@MMK_R_t" = -20;
"@MMK_R_v" = 5;
"@MMK_R_w" = 5;
"@MMK_R_zcaron" = -5;
};
"@MMK_L_thorn" = {
"@MMK_R_a" = -5;
"@MMK_R_asterisk" = -45;
"@MMK_R_at" = 5;
"@MMK_R_backslash" = -80;
"@MMK_R_bracketright" = -10;
"@MMK_R_comma" = -25;
"@MMK_R_f" = -10;
"@MMK_R_parenright" = -10;
"@MMK_R_question" = -20;
"@MMK_R_quotedbl" = -50;
"@MMK_R_quotedblleft" = -50;
"@MMK_R_quotedblright" = -50;
"@MMK_R_quotesinglbase" = -25;
"@MMK_R_slash" = -15;
"@MMK_R_t" = -15;
"@MMK_R_trademark" = -45;
"@MMK_R_v" = -15;
"@MMK_R_w" = -15;
"@MMK_R_x" = -30;
"@MMK_R_yacute" = -15;
"@MMK_R_zcaron" = -25;
};
"@MMK_L_three" = {
"@MMK_R_percent" = -5;
"@MMK_R_quotedbl" = -5;
"@MMK_R_quotedblleft" = -10;
"@MMK_R_quotedblright" = -5;
};
"@MMK_L_three.cap" = {
"@MMK_R_percent.cap" = -5;
"@MMK_R_quotedbl" = -5;
"@MMK_R_quotedblleft" = -10;
"@MMK_R_quotedblright" = -5;
};
"@MMK_L_two" = {
"@MMK_R_colon" = 5;
"@MMK_R_comma" = 5;
"@MMK_R_guillemotleft" = -35;
"@MMK_R_guillemotright" = 5;
"@MMK_R_hyphen" = -15;
"@MMK_R_hyphen.cap" = -15;
"@MMK_R_percent" = 25;
"@MMK_R_quotesinglbase" = 5;
};
"@MMK_L_two.cap" = {
"@MMK_R_colon" = 5;
"@MMK_R_comma" = 5;
"@MMK_R_guillemotleft" = -35;
"@MMK_R_guillemotright" = 5;
"@MMK_R_hyphen" = -15;
"@MMK_R_hyphen.cap" = -15;
"@MMK_R_percent.cap" = 25;
"@MMK_R_quotesinglbase" = 5;
};
"@MMK_L_u" = {
"@MMK_R_asterisk" = -5;
"@MMK_R_backslash" = -65;
"@MMK_R_trademark" = -30;
};
"@MMK_L_v" = {
"@MMK_R_a" = -20;
"@MMK_R_bracketright" = -15;
"@MMK_R_c" = -15;
"@MMK_R_colon" = -15;
"@MMK_R_comma" = -65;
"@MMK_R_d" = -15;
"@MMK_R_f" = 10;
"@MMK_R_g" = -15;
"@MMK_R_guillemotleft" = -35;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quotedblleft" = 20;
"@MMK_R_quotedblright" = 20;
"@MMK_R_quotesinglbase" = -65;
"@MMK_R_scaron" = -10;
"@MMK_R_t" = 10;
"@MMK_R_w" = 10;
"@MMK_R_yacute" = 10;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_w" = {
"@MMK_R_a" = -20;
"@MMK_R_ampersand" = -35;
"@MMK_R_asterisk" = 15;
"@MMK_R_at" = -5;
"@MMK_R_backslash" = -40;
"@MMK_R_bracketright" = -15;
"@MMK_R_c" = -15;
"@MMK_R_colon" = -15;
"@MMK_R_comma" = -65;
"@MMK_R_d" = -15;
"@MMK_R_f" = 10;
"@MMK_R_g" = -15;
"@MMK_R_guillemotleft" = -35;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_parenright" = -20;
"@MMK_R_periodcentered" = -15;
"@MMK_R_question" = 15;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quotedblleft" = 20;
"@MMK_R_quotedblright" = 20;
"@MMK_R_quotesinglbase" = -65;
"@MMK_R_scaron" = -10;
"@MMK_R_slash" = -35;
"@MMK_R_t" = 10;
"@MMK_R_v" = 10;
"@MMK_R_w" = 10;
"@MMK_R_x" = -5;
"@MMK_R_yacute" = 10;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_x" = {
"@MMK_R_a" = -15;
"@MMK_R_c" = -35;
"@MMK_R_copyright" = -20;
"@MMK_R_d" = -30;
"@MMK_R_f" = -10;
"@MMK_R_g" = -30;
"@MMK_R_guillemotleft" = -50;
"@MMK_R_guillemotright" = -15;
"@MMK_R_hyphen" = -45;
"@MMK_R_hyphen.cap" = -45;
"@MMK_R_quotedbl" = -10;
"@MMK_R_quotedblleft" = -10;
"@MMK_R_quotedblright" = -10;
"@MMK_R_scaron" = -25;
"@MMK_R_t" = -15;
"@MMK_R_u" = -15;
"@MMK_R_w" = -5;
"@MMK_R_yacute" = -5;
};
"@MMK_L_yacute" = {
"@MMK_R_a" = -20;
"@MMK_R_ampersand" = -35;
"@MMK_R_asterisk" = 15;
"@MMK_R_at" = -5;
"@MMK_R_backslash" = -40;
"@MMK_R_bracketright" = -15;
"@MMK_R_c" = -15;
"@MMK_R_colon" = -15;
"@MMK_R_comma" = -65;
"@MMK_R_d" = -15;
"@MMK_R_f" = 10;
"@MMK_R_g" = -15;
"@MMK_R_guillemotleft" = -35;
"@MMK_R_guillemotright" = -5;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_parenright" = -20;
"@MMK_R_periodcentered" = -15;
"@MMK_R_question" = 15;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quotedblleft" = 20;
"@MMK_R_quotedblright" = 20;
"@MMK_R_quotesinglbase" = -65;
"@MMK_R_scaron" = -10;
"@MMK_R_slash" = -35;
"@MMK_R_t" = 10;
"@MMK_R_v" = 10;
"@MMK_R_w" = 10;
"@MMK_R_x" = -5;
"@MMK_R_yacute" = 10;
"@MMK_R_zcaron" = -15;
};
"@MMK_L_zcaron" = {
"@MMK_R_a" = -5;
"@MMK_R_ampersand" = -20;
"@MMK_R_asterisk" = -10;
"@MMK_R_at" = -10;
"@MMK_R_backslash" = -55;
"@MMK_R_c" = -30;
"@MMK_R_comma" = 10;
"@MMK_R_d" = -20;
"@MMK_R_g" = -20;
"@MMK_R_guillemotleft" = -30;
"@MMK_R_hyphen" = -25;
"@MMK_R_hyphen.cap" = -25;
"@MMK_R_periodcentered" = -10;
"@MMK_R_question" = 5;
"@MMK_R_quotesinglbase" = 10;
"@MMK_R_scaron" = -10;
};
"@MMK_L_zero" = {
"@MMK_R_comma" = -25;
"@MMK_R_quotedbl" = -15;
"@MMK_R_quotedblleft" = -20;
"@MMK_R_quotedblright" = -15;
"@MMK_R_quotesinglbase" = -25;
};
"@MMK_L_zero.cap" = {
"@MMK_R_comma" = -25;
"@MMK_R_quotedbl" = -15;
"@MMK_R_quotedblleft" = -20;
"@MMK_R_quotedblright" = -15;
"@MMK_R_quotesinglbase" = -25;
};
B = {
V = -20;
X = -20;
v = -5;
x = -15;
};
F = {
p = -30;
v = -35;
x = -50;
};
P = {
V = -5;
X = -25;
v = 15;
x = -5;
};
Q = {
V = -40;
X = -30;
v = -5;
x = -15;
};
V = {
V = 15;
p = -25;
v = -20;
x = -35;
};
X = {
v = -35;
};
eight = {
nine = -10;
one = -15;
seven = -30;
six = -10;
two = -5;
zero = -10;
};
five = {
nine = -10;
one = -30;
seven = -15;
};
four = {
nine = -5;
one = -30;
seven = -10;
};
nine = {
seven = -20;
two = -5;
};
one = {
four = -5;
one = -10;
};
seven = {
eight = -20;
five = -20;
four = -70;
nine = -10;
seven = 10;
six = -20;
three = -10;
two = -5;
zero = -20;
};
six = {
nine = -10;
seven = -20;
two = -10;
};
three = {
seven = -20;
};
two = {
eight = -5;
four = -30;
nine = 5;
seven = -5;
};
v = {
v = 10;
x = -5;
};
x = {
v = -5;
};
zero = {
eight = -10;
nine = -5;
one = -15;
seven = -30;
two = -5;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2011 Schwartzco Inc dba Commercial Type.";
}
);
},
{
key = familyNames;
values = (
{
language = ENG;
value = "Neue Haas Grotesk Display Pro";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Commercial Type";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Christian Schwartz after Max Miedinger";
}
);
},
{
key = trademarks;
values = (
{
language = ENG;
value = "Neue Haas Grotesk is a trademark of Linotype AG, a Monotype Imaging company.";
}
);
},
{
key = licenseURL;
value = "http://commercialtype.com/license";
},
{
key = licenses;
values = (
{
language = ENG;
value = "Commercial Type Font Software End User License AgreementPLEASE READ THIS DOCUMENT CAREFULLY and we recommend that you keep a copy for further reference. This End User License Agreement (the \"Agreement\" \"EULA,\" \"License,\" \"Agreement\" or \"License Agreement\") is a legal agreement between you and Schwartzco, Inc., d/b/a Commercial Type, a/d/b/a St. Bride Type Foundry (collectively, \"Commercial Type\") and becomes a binding contract between you and Schwartzco. This Agreement governs the terms of use the Font Software and the design of the Fonts embodied therein (collectively, \"Font Software\"), together with any media, printed materials, electronic documentation, updates, add-ons, artwork, web services and any other material that may be associated with the product now or in the future. This Agreement becomes effective (a) when you \"ACCEPT LICENSE AGREEMENT,\" or (b) if you are acquire and accept the Font Software on a Compact Disc or Digital Video Disk (CD, DVD), or (c) when you open the compressed electronic file in which the Font Software is contained. If you do not wish to enter into this Agreement, do not purchase, access, download and/or install or otherwise use the Font Software.1. Upon payment in full, Commercial Type will grant you a non-exclusive terminable License to the Font Software that accompanies this EULA. Use of the Font Software is limited to Personal or Internal Business Use only. For the purposes of this Agreement, \"Font Software\" shall be defined as the design of the Fonts together with the Font Software which, when used generates the typeface, typographic designs and, if applicable, ornaments or other designs. Personal or Internal Business Use shall mean Use of the Font Software for your customary personal or internal business purposes and, except as may otherwise permitted herein, shall not mean or include the commercial distribution or use of Font Software, the design of the fonts or artwork embodied therein or any component thereof for any commercial use or in any Commercial Product for sale whatsoever. For the purposes of this Agreement, prohibited commercial uses include, by way of example not limitation, T-shirts, third-party software, electronic devices, mugs, animation, etc. and as may be further noted below. If you are unsure whether your use is not permitted, contact Commercial Type. Your failure to contact to seek permission or the lack of a specific prohibition in this Agreement shall not be interpreted or deemed a waiver or permissible use of any kind. You hereby agree that the Font Software shall further comprise all bitmap representations of typeface and typographic designs and ornaments created by or derived from the Font Software. The Font Software shall be deemed to include any upgrades, updates, related files, permitted modifications, if any, permitted copies, and related documentation.2. If you are a design consultancy, advertising agency or purchasing this license for use by or on behalf of such an entity, the ultimate end user should also purchase a license appropriate for their intended use of the Font Software, if their use of the Font Software is likely to involve uses not permitted under this Agreement. The license granted herein for personal use does not extend to uses by temporary employees or independent contractors using the Font Software as their use may relate to providing professional services or for other professional uses. Under such circumstances an employer and/or the ultimate end user are also required to purchase a license appropriate for their usage.3. For the purposes of this Agreement, \"Commercial Product\" shall also mean, among other things, a user editable electronic document created by Use of the Font Software which is offered for distribution to the general public (or to some subset of the general public), in Flash type software distributed or exhibited, in gaming products or software where the extraction of the Font Software or the designs embodied therein may be extracted; or use on goods for sale as a commercial product in exchange for a separate fee or other consideration. However, a document distributed in connection with a commercial transaction in which the consideration is unrelated to such a document (for example, printed advertising, a business letter or a receipt for purchase of tangible goods such as clothing), or as other design materials distributed incidental to the purchase of goods or services, shall not be considered a Commercial Product.4. a) Except as may be prohibited herein, you are permitted to electronically distribute a “Personal or Internal Business Use” document (that is, a document other than a Commercial Product as defined above) (i) that is in a static graphic image (for example, a “gif”) or in an embedded electronic document, and (ii) which is distributed in a format that permits only the viewing and printing (and not the editing, altering, enhancing, or modifying) of such static graphic image or embedded document. Personal or Internal Business Use shall not include any Use of the Font Software by persons that are not members of your immediate household, your authorized employees, or your authorized agents. All such household members, employees and agents shall be notified by you as to the terms and conditions of the Agreement and shall agree to be bound by it prior to use of the Font Software.b) Use of the Font Software in sIFR (Scalable Inman Font Replacement) is permitted. However, the use of Cufón or @font-face or other forms of web embedding or web font replacement technologies, (“Font Replacement Technologies”) other than pdf as otherwise expressly permitted herein, each require the purchase of a license upgrade.5. Commercial Type, its successors and assigns, expressly retain all right and title in and to the Font Software together with the design of the Font embodied therein together with any trademarks used in connection therewith. Except as may be otherwise expressly permitted herein, you agree not to copy the Font Software or create derivative works based upon the design of the Font or the Font Software. You hereby agree that the design of the Font and the Font Software are the exclusive property of Commercial Type and that the unauthorized use of the design of the Font or the Font Software is an infringement of Commercial Type's exclusive rights and causing significant monetary harm. All rights not expressly granted herein are reserved to Commercial Type. Commercial Type's rights and remedies in the event of an infringement shall be cumulative in nature. 6. Except as is prohibited herein, you may install and Use the Font Software on a single file server for Use on a single local area network (\"LAN\") only when the Use of such Font Software is expressly for and limited to the number of total users disclosed and licensed under this Agreement, i.e., the total number of users who could use the Font Software, not the total number of users who might have access to the Font Software at any one time.7. Except as may be otherwise expressly permitted herein, you may not alter or copy the Font Software or the designs embodied therein in any manner whatsoever. Reformatting the Font Software into other formats for use in other operating systems is expressly prohibited. Upon payment of an additional fee and a separate written agreement Commercial Type may, if so agreed, provide the Font Software in alternate and/or additional font formats, contact Commercial Type for a quotation. Altering or amending the embedding bits characteristics of the Font Software is expressly prohibited. The Font Software may not be used to create or distribute any electronic document in which the Font Software or any part thereof, is embedded in a manner or format that permits editing, alterations, enhancements, or modifications by the recipient of such document. You may not knowingly transmit any electronic document or the Font Software to any party that intends or is likely to \"hack,\" edit, alter, enhance, or otherwise modify the Font Software or remove the Font Software from any document.8. You may make one (1) back-up copy of Font Softw";
}
);
},
{
key = manufacturerURL;
value = "http://commercialtype.com";
},
{
key = designerURL;
value = "http://commercialtype.com";
},
{
key = postscriptFullName;
value = "Neue Haas Grotesk Display Pro 45 Light";
},
{
key = postscriptFontName;
value = "NeueHaasDisplay-Light";
}
);
settings = {
disablesNiceNames = 1;
};
stems = (
{
horizontal = 1;
name = hStem0;
},
{
horizontal = 1;
name = hStem1;
},
{
horizontal = 1;
name = hStem2;
},
{
name = vStem0;
},
{
name = vStem1;
},
{
name = vStem2;
}
);
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 0;
}
